{"ast":null,"code":"import _classCallCheck from \"C:/Users/barbu/Desktop/projeto-Akin/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/barbu/Desktop/projeto-Akin/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { defer, isXml, parse } from \"./utils/core\";\nimport httpRequest from \"./utils/request\";\nimport mime from \"./utils/mime\";\nimport Path from \"./utils/path\";\nimport EventEmitter from \"event-emitter\";\nimport localforage from \"localforage\";\n\n/**\n * Handles saving and requesting files from local storage\n * @class\n * @param {string} name This should be the name of the application for modals\n * @param {function} [requester]\n * @param {function} [resolver]\n */\nvar Store = /*#__PURE__*/function () {\n  function Store(name, requester, resolver) {\n    _classCallCheck(this, Store);\n    this.urlCache = {};\n    this.storage = undefined;\n    this.name = name;\n    this.requester = requester || httpRequest;\n    this.resolver = resolver;\n    this.online = true;\n    this.checkRequirements();\n    this.addListeners();\n  }\n\n  /**\n   * Checks to see if localForage exists in global namspace,\n   * Requires localForage if it isn't there\n   * @private\n   */\n  _createClass(Store, [{\n    key: \"checkRequirements\",\n    value: function checkRequirements() {\n      try {\n        var store;\n        if (typeof localforage === \"undefined\") {\n          store = localforage;\n        }\n        this.storage = store.createInstance({\n          name: this.name\n        });\n      } catch (e) {\n        throw new Error(\"localForage lib not loaded\");\n      }\n    }\n\n    /**\n     * Add online and offline event listeners\n     * @private\n     */\n  }, {\n    key: \"addListeners\",\n    value: function addListeners() {\n      this._status = this.status.bind(this);\n      window.addEventListener('online', this._status);\n      window.addEventListener('offline', this._status);\n    }\n\n    /**\n     * Remove online and offline event listeners\n     * @private\n     */\n  }, {\n    key: \"removeListeners\",\n    value: function removeListeners() {\n      window.removeEventListener('online', this._status);\n      window.removeEventListener('offline', this._status);\n      this._status = undefined;\n    }\n\n    /**\n     * Update the online / offline status\n     * @private\n     */\n  }, {\n    key: \"status\",\n    value: function status(event) {\n      var online = navigator.onLine;\n      this.online = online;\n      if (online) {\n        this.emit(\"online\", this);\n      } else {\n        this.emit(\"offline\", this);\n      }\n    }\n\n    /**\n     * Add all of a book resources to the store\n     * @param  {Resources} resources  book resources\n     * @param  {boolean} [force] force resaving resources\n     * @return {Promise<object>} store objects\n     */\n  }, {\n    key: \"add\",\n    value: function add(resources, force) {\n      var _this = this;\n      var mapped = resources.resources.map(function (item) {\n        var href = item.href;\n        var url = _this.resolver(href);\n        var encodedUrl = window.encodeURIComponent(url);\n        return _this.storage.getItem(encodedUrl).then(function (item) {\n          if (!item || force) {\n            return _this.requester(url, \"binary\").then(function (data) {\n              return _this.storage.setItem(encodedUrl, data);\n            });\n          } else {\n            return item;\n          }\n        });\n      });\n      return Promise.all(mapped);\n    }\n\n    /**\n     * Put binary data from a url to storage\n     * @param  {string} url  a url to request from storage\n     * @param  {boolean} [withCredentials]\n     * @param  {object} [headers]\n     * @return {Promise<Blob>}\n     */\n  }, {\n    key: \"put\",\n    value: function put(url, withCredentials, headers) {\n      var _this2 = this;\n      var encodedUrl = window.encodeURIComponent(url);\n      return this.storage.getItem(encodedUrl).then(function (result) {\n        if (!result) {\n          return _this2.requester(url, \"binary\", withCredentials, headers).then(function (data) {\n            return _this2.storage.setItem(encodedUrl, data);\n          });\n        }\n        return result;\n      });\n    }\n\n    /**\n     * Request a url\n     * @param  {string} url  a url to request from storage\n     * @param  {string} [type] specify the type of the returned result\n     * @param  {boolean} [withCredentials]\n     * @param  {object} [headers]\n     * @return {Promise<Blob | string | JSON | Document | XMLDocument>}\n     */\n  }, {\n    key: \"request\",\n    value: function request(url, type, withCredentials, headers) {\n      var _this3 = this;\n      if (this.online) {\n        // From network\n        return this.requester(url, type, withCredentials, headers).then(function (data) {\n          // save to store if not present\n          _this3.put(url);\n          return data;\n        });\n      } else {\n        // From store\n        return this.retrieve(url, type);\n      }\n    }\n\n    /**\n     * Request a url from storage\n     * @param  {string} url  a url to request from storage\n     * @param  {string} [type] specify the type of the returned result\n     * @return {Promise<Blob | string | JSON | Document | XMLDocument>}\n     */\n  }, {\n    key: \"retrieve\",\n    value: function retrieve(url, type) {\n      var _this4 = this;\n      var deferred = new defer();\n      var response;\n      var path = new Path(url);\n\n      // If type isn't set, determine it from the file extension\n      if (!type) {\n        type = path.extension;\n      }\n      if (type == \"blob\") {\n        response = this.getBlob(url);\n      } else {\n        response = this.getText(url);\n      }\n      return response.then(function (r) {\n        var deferred = new defer();\n        var result;\n        if (r) {\n          result = _this4.handleResponse(r, type);\n          deferred.resolve(result);\n        } else {\n          deferred.reject({\n            message: \"File not found in storage: \" + url,\n            stack: new Error().stack\n          });\n        }\n        return deferred.promise;\n      });\n    }\n\n    /**\n     * Handle the response from request\n     * @private\n     * @param  {any} response\n     * @param  {string} [type]\n     * @return {any} the parsed result\n     */\n  }, {\n    key: \"handleResponse\",\n    value: function handleResponse(response, type) {\n      var r;\n      if (type == \"json\") {\n        r = JSON.parse(response);\n      } else if (isXml(type)) {\n        r = parse(response, \"text/xml\");\n      } else if (type == \"xhtml\") {\n        r = parse(response, \"application/xhtml+xml\");\n      } else if (type == \"html\" || type == \"htm\") {\n        r = parse(response, \"text/html\");\n      } else {\n        r = response;\n      }\n      return r;\n    }\n\n    /**\n     * Get a Blob from Storage by Url\n     * @param  {string} url\n     * @param  {string} [mimeType]\n     * @return {Blob}\n     */\n  }, {\n    key: \"getBlob\",\n    value: function getBlob(url, mimeType) {\n      var encodedUrl = window.encodeURIComponent(url);\n      return this.storage.getItem(encodedUrl).then(function (uint8array) {\n        if (!uint8array) return;\n        mimeType = mimeType || mime.lookup(url);\n        return new Blob([uint8array], {\n          type: mimeType\n        });\n      });\n    }\n\n    /**\n     * Get Text from Storage by Url\n     * @param  {string} url\n     * @param  {string} [mimeType]\n     * @return {string}\n     */\n  }, {\n    key: \"getText\",\n    value: function getText(url, mimeType) {\n      var encodedUrl = window.encodeURIComponent(url);\n      mimeType = mimeType || mime.lookup(url);\n      return this.storage.getItem(encodedUrl).then(function (uint8array) {\n        var deferred = new defer();\n        var reader = new FileReader();\n        var blob;\n        if (!uint8array) return;\n        blob = new Blob([uint8array], {\n          type: mimeType\n        });\n        reader.addEventListener(\"loadend\", function () {\n          deferred.resolve(reader.result);\n        });\n        reader.readAsText(blob, mimeType);\n        return deferred.promise;\n      });\n    }\n\n    /**\n     * Get a base64 encoded result from Storage by Url\n     * @param  {string} url\n     * @param  {string} [mimeType]\n     * @return {string} base64 encoded\n     */\n  }, {\n    key: \"getBase64\",\n    value: function getBase64(url, mimeType) {\n      var encodedUrl = window.encodeURIComponent(url);\n      mimeType = mimeType || mime.lookup(url);\n      return this.storage.getItem(encodedUrl).then(function (uint8array) {\n        var deferred = new defer();\n        var reader = new FileReader();\n        var blob;\n        if (!uint8array) return;\n        blob = new Blob([uint8array], {\n          type: mimeType\n        });\n        reader.addEventListener(\"loadend\", function () {\n          deferred.resolve(reader.result);\n        });\n        reader.readAsDataURL(blob, mimeType);\n        return deferred.promise;\n      });\n    }\n\n    /**\n     * Create a Url from a stored item\n     * @param  {string} url\n     * @param  {object} [options.base64] use base64 encoding or blob url\n     * @return {Promise} url promise with Url string\n     */\n  }, {\n    key: \"createUrl\",\n    value: function createUrl(url, options) {\n      var deferred = new defer();\n      var _URL = window.URL || window.webkitURL || window.mozURL;\n      var tempUrl;\n      var response;\n      var useBase64 = options && options.base64;\n      if (url in this.urlCache) {\n        deferred.resolve(this.urlCache[url]);\n        return deferred.promise;\n      }\n      if (useBase64) {\n        response = this.getBase64(url);\n        if (response) {\n          response.then(function (tempUrl) {\n            this.urlCache[url] = tempUrl;\n            deferred.resolve(tempUrl);\n          }.bind(this));\n        }\n      } else {\n        response = this.getBlob(url);\n        if (response) {\n          response.then(function (blob) {\n            tempUrl = _URL.createObjectURL(blob);\n            this.urlCache[url] = tempUrl;\n            deferred.resolve(tempUrl);\n          }.bind(this));\n        }\n      }\n      if (!response) {\n        deferred.reject({\n          message: \"File not found in storage: \" + url,\n          stack: new Error().stack\n        });\n      }\n      return deferred.promise;\n    }\n\n    /**\n     * Revoke Temp Url for a archive item\n     * @param  {string} url url of the item in the store\n     */\n  }, {\n    key: \"revokeUrl\",\n    value: function revokeUrl(url) {\n      var _URL = window.URL || window.webkitURL || window.mozURL;\n      var fromCache = this.urlCache[url];\n      if (fromCache) _URL.revokeObjectURL(fromCache);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _URL = window.URL || window.webkitURL || window.mozURL;\n      for (var fromCache in this.urlCache) {\n        _URL.revokeObjectURL(fromCache);\n      }\n      this.urlCache = {};\n      this.removeListeners();\n    }\n  }]);\n  return Store;\n}();\nEventEmitter(Store.prototype);\nexport default Store;","map":{"version":3,"names":["defer","isXml","parse","httpRequest","mime","Path","EventEmitter","localforage","Store","name","requester","resolver","_classCallCheck","urlCache","storage","undefined","online","checkRequirements","addListeners","_createClass","key","value","store","createInstance","e","Error","_status","status","bind","window","addEventListener","removeListeners","removeEventListener","event","navigator","onLine","emit","add","resources","force","_this","mapped","map","item","href","url","encodedUrl","encodeURIComponent","getItem","then","data","setItem","Promise","all","put","withCredentials","headers","_this2","result","request","type","_this3","retrieve","_this4","deferred","response","path","extension","getBlob","getText","r","handleResponse","resolve","reject","message","stack","promise","JSON","mimeType","uint8array","lookup","Blob","reader","FileReader","blob","readAsText","getBase64","readAsDataURL","createUrl","options","_URL","URL","webkitURL","mozURL","tempUrl","useBase64","base64","createObjectURL","revokeUrl","fromCache","revokeObjectURL","destroy","prototype"],"sources":["C:/Users/barbu/Desktop/projeto-Akin/node_modules/epubjs/src/store.js"],"sourcesContent":["import {defer, isXml, parse} from \"./utils/core\";\nimport httpRequest from \"./utils/request\";\nimport mime from \"./utils/mime\";\nimport Path from \"./utils/path\";\nimport EventEmitter from \"event-emitter\";\nimport localforage from \"localforage\";\n\n/**\n * Handles saving and requesting files from local storage\n * @class\n * @param {string} name This should be the name of the application for modals\n * @param {function} [requester]\n * @param {function} [resolver]\n */\nclass Store {\n\n\tconstructor(name, requester, resolver) {\n\t\tthis.urlCache = {};\n\n\t\tthis.storage = undefined;\n\n\t\tthis.name = name;\n\t\tthis.requester = requester || httpRequest;\n\t\tthis.resolver = resolver;\n\n\t\tthis.online = true;\n\n\t\tthis.checkRequirements();\n\n\t\tthis.addListeners();\n\t}\n\n\t/**\n\t * Checks to see if localForage exists in global namspace,\n\t * Requires localForage if it isn't there\n\t * @private\n\t */\n\tcheckRequirements(){\n\t\ttry {\n\t\t\tlet store;\n\t\t\tif (typeof localforage === \"undefined\") {\n\t\t\t\tstore = localforage;\n\t\t\t}\n\t\t\tthis.storage = store.createInstance({\n\t\t\t\t\tname: this.name\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tthrow new Error(\"localForage lib not loaded\");\n\t\t}\n\t}\n\n\t/**\n\t * Add online and offline event listeners\n\t * @private\n\t */\n\taddListeners() {\n\t\tthis._status = this.status.bind(this);\n\t\twindow.addEventListener('online',  this._status);\n\t  window.addEventListener('offline', this._status);\n\t}\n\n\t/**\n\t * Remove online and offline event listeners\n\t * @private\n\t */\n\tremoveListeners() {\n\t\twindow.removeEventListener('online',  this._status);\n\t  window.removeEventListener('offline', this._status);\n\t\tthis._status = undefined;\n\t}\n\n\t/**\n\t * Update the online / offline status\n\t * @private\n\t */\n\tstatus(event) {\n\t\tlet online = navigator.onLine;\n\t\tthis.online = online;\n\t\tif (online) {\n\t\t\tthis.emit(\"online\", this);\n\t\t} else {\n\t\t\tthis.emit(\"offline\", this);\n\t\t}\n\t}\n\n\t/**\n\t * Add all of a book resources to the store\n\t * @param  {Resources} resources  book resources\n\t * @param  {boolean} [force] force resaving resources\n\t * @return {Promise<object>} store objects\n\t */\n\tadd(resources, force) {\n\t\tlet mapped = resources.resources.map((item) => {\n\t\t\tlet { href } = item;\n\t\t\tlet url = this.resolver(href);\n\t\t\tlet encodedUrl = window.encodeURIComponent(url);\n\n\t\t\treturn this.storage.getItem(encodedUrl).then((item) => {\n\t\t\t\tif (!item || force) {\n\t\t\t\t\treturn this.requester(url, \"binary\")\n\t\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\t\treturn this.storage.setItem(encodedUrl, data);\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t});\n\n\t\t});\n\t\treturn Promise.all(mapped);\n\t}\n\n\t/**\n\t * Put binary data from a url to storage\n\t * @param  {string} url  a url to request from storage\n\t * @param  {boolean} [withCredentials]\n\t * @param  {object} [headers]\n\t * @return {Promise<Blob>}\n\t */\n\tput(url, withCredentials, headers) {\n\t\tlet encodedUrl = window.encodeURIComponent(url);\n\n\t\treturn this.storage.getItem(encodedUrl).then((result) => {\n\t\t\tif (!result) {\n\t\t\t\treturn this.requester(url, \"binary\", withCredentials, headers).then((data) => {\n\t\t\t\t\treturn this.storage.setItem(encodedUrl, data);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\t/**\n\t * Request a url\n\t * @param  {string} url  a url to request from storage\n\t * @param  {string} [type] specify the type of the returned result\n\t * @param  {boolean} [withCredentials]\n\t * @param  {object} [headers]\n\t * @return {Promise<Blob | string | JSON | Document | XMLDocument>}\n\t */\n\trequest(url, type, withCredentials, headers){\n\t\tif (this.online) {\n\t\t\t// From network\n\t\t\treturn this.requester(url, type, withCredentials, headers).then((data) => {\n\t\t\t\t// save to store if not present\n\t\t\t\tthis.put(url);\n\t\t\t\treturn data;\n\t\t\t})\n\t\t} else {\n\t\t\t// From store\n\t\t\treturn this.retrieve(url, type);\n\t\t}\n\n\t}\n\n\t/**\n\t * Request a url from storage\n\t * @param  {string} url  a url to request from storage\n\t * @param  {string} [type] specify the type of the returned result\n\t * @return {Promise<Blob | string | JSON | Document | XMLDocument>}\n\t */\n\tretrieve(url, type) {\n\t\tvar deferred = new defer();\n\t\tvar response;\n\t\tvar path = new Path(url);\n\n\t\t// If type isn't set, determine it from the file extension\n\t\tif(!type) {\n\t\t\ttype = path.extension;\n\t\t}\n\n\t\tif(type == \"blob\"){\n\t\t\tresponse = this.getBlob(url);\n\t\t} else {\n\t\t\tresponse = this.getText(url);\n\t\t}\n\n\n\t\treturn response.then((r) => {\n\t\t\tvar deferred = new defer();\n\t\t\tvar result;\n\t\t\tif (r) {\n\t\t\t\tresult = this.handleResponse(r, type);\n\t\t\t\tdeferred.resolve(result);\n\t\t\t} else {\n\t\t\t\tdeferred.reject({\n\t\t\t\t\tmessage : \"File not found in storage: \" + url,\n\t\t\t\t\tstack : new Error().stack\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn deferred.promise;\n\t\t});\n\t}\n\n\t/**\n\t * Handle the response from request\n\t * @private\n\t * @param  {any} response\n\t * @param  {string} [type]\n\t * @return {any} the parsed result\n\t */\n\thandleResponse(response, type){\n\t\tvar r;\n\n\t\tif(type == \"json\") {\n\t\t\tr = JSON.parse(response);\n\t\t}\n\t\telse\n\t\tif(isXml(type)) {\n\t\t\tr = parse(response, \"text/xml\");\n\t\t}\n\t\telse\n\t\tif(type == \"xhtml\") {\n\t\t\tr = parse(response, \"application/xhtml+xml\");\n\t\t}\n\t\telse\n\t\tif(type == \"html\" || type == \"htm\") {\n\t\t\tr = parse(response, \"text/html\");\n\t\t } else {\n\t\t\t r = response;\n\t\t }\n\n\t\treturn r;\n\t}\n\n\t/**\n\t * Get a Blob from Storage by Url\n\t * @param  {string} url\n\t * @param  {string} [mimeType]\n\t * @return {Blob}\n\t */\n\tgetBlob(url, mimeType){\n\t\tlet encodedUrl = window.encodeURIComponent(url);\n\n\t\treturn this.storage.getItem(encodedUrl).then(function(uint8array) {\n\t\t\tif(!uint8array) return;\n\n\t\t\tmimeType = mimeType || mime.lookup(url);\n\n\t\t\treturn new Blob([uint8array], {type : mimeType});\n\t\t});\n\n\t}\n\n\t/**\n\t * Get Text from Storage by Url\n\t * @param  {string} url\n\t * @param  {string} [mimeType]\n\t * @return {string}\n\t */\n\tgetText(url, mimeType){\n\t\tlet encodedUrl = window.encodeURIComponent(url);\n\n\t\tmimeType = mimeType || mime.lookup(url);\n\n\t\treturn this.storage.getItem(encodedUrl).then(function(uint8array) {\n\t\t\tvar deferred = new defer();\n\t\t\tvar reader = new FileReader();\n\t\t\tvar blob;\n\n\t\t\tif(!uint8array) return;\n\n\t\t\tblob = new Blob([uint8array], {type : mimeType});\n\n\t\t\treader.addEventListener(\"loadend\", () => {\n\t\t\t\tdeferred.resolve(reader.result);\n\t\t\t});\n\n\t\t\treader.readAsText(blob, mimeType);\n\n\t\t\treturn deferred.promise;\n\t\t});\n\t}\n\n\t/**\n\t * Get a base64 encoded result from Storage by Url\n\t * @param  {string} url\n\t * @param  {string} [mimeType]\n\t * @return {string} base64 encoded\n\t */\n\tgetBase64(url, mimeType){\n\t\tlet encodedUrl = window.encodeURIComponent(url);\n\n\t\tmimeType = mimeType || mime.lookup(url);\n\n\t\treturn this.storage.getItem(encodedUrl).then((uint8array) => {\n\t\t\tvar deferred = new defer();\n\t\t\tvar reader = new FileReader();\n\t\t\tvar blob;\n\n\t\t\tif(!uint8array) return;\n\n\t\t\tblob = new Blob([uint8array], {type : mimeType});\n\n\t\t\treader.addEventListener(\"loadend\", () => {\n\t\t\t\tdeferred.resolve(reader.result);\n\t\t\t});\n\t\t\treader.readAsDataURL(blob, mimeType);\n\n\t\t\treturn deferred.promise;\n\t\t});\n\t}\n\n\t/**\n\t * Create a Url from a stored item\n\t * @param  {string} url\n\t * @param  {object} [options.base64] use base64 encoding or blob url\n\t * @return {Promise} url promise with Url string\n\t */\n\tcreateUrl(url, options){\n\t\tvar deferred = new defer();\n\t\tvar _URL = window.URL || window.webkitURL || window.mozURL;\n\t\tvar tempUrl;\n\t\tvar response;\n\t\tvar useBase64 = options && options.base64;\n\n\t\tif(url in this.urlCache) {\n\t\t\tdeferred.resolve(this.urlCache[url]);\n\t\t\treturn deferred.promise;\n\t\t}\n\n\t\tif (useBase64) {\n\t\t\tresponse = this.getBase64(url);\n\n\t\t\tif (response) {\n\t\t\t\tresponse.then(function(tempUrl) {\n\n\t\t\t\t\tthis.urlCache[url] = tempUrl;\n\t\t\t\t\tdeferred.resolve(tempUrl);\n\n\t\t\t\t}.bind(this));\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tresponse = this.getBlob(url);\n\n\t\t\tif (response) {\n\t\t\t\tresponse.then(function(blob) {\n\n\t\t\t\t\ttempUrl = _URL.createObjectURL(blob);\n\t\t\t\t\tthis.urlCache[url] = tempUrl;\n\t\t\t\t\tdeferred.resolve(tempUrl);\n\n\t\t\t\t}.bind(this));\n\n\t\t\t}\n\t\t}\n\n\n\t\tif (!response) {\n\t\t\tdeferred.reject({\n\t\t\t\tmessage : \"File not found in storage: \" + url,\n\t\t\t\tstack : new Error().stack\n\t\t\t});\n\t\t}\n\n\t\treturn deferred.promise;\n\t}\n\n\t/**\n\t * Revoke Temp Url for a archive item\n\t * @param  {string} url url of the item in the store\n\t */\n\trevokeUrl(url){\n\t\tvar _URL = window.URL || window.webkitURL || window.mozURL;\n\t\tvar fromCache = this.urlCache[url];\n\t\tif(fromCache) _URL.revokeObjectURL(fromCache);\n\t}\n\n\tdestroy() {\n\t\tvar _URL = window.URL || window.webkitURL || window.mozURL;\n\t\tfor (let fromCache in this.urlCache) {\n\t\t\t_URL.revokeObjectURL(fromCache);\n\t\t}\n\t\tthis.urlCache = {};\n\t\tthis.removeListeners();\n\t}\n}\n\nEventEmitter(Store.prototype);\n\nexport default Store;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}