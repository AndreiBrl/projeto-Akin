{"ast":null,"code":"import _classCallCheck from \"C:/Users/barbu/Desktop/projeto-Akin/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/barbu/Desktop/projeto-Akin/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport EventEmitter from \"event-emitter\";\nimport { extend, defer } from \"./utils/core\";\nimport Url from \"./utils/url\";\nimport Path from \"./utils/path\";\nimport Spine from \"./spine\";\nimport Locations from \"./locations\";\nimport Container from \"./container\";\nimport Packaging from \"./packaging\";\nimport Navigation from \"./navigation\";\nimport Resources from \"./resources\";\nimport PageList from \"./pagelist\";\nimport Rendition from \"./rendition\";\nimport Archive from \"./archive\";\nimport request from \"./utils/request\";\nimport EpubCFI from \"./epubcfi\";\nimport Store from \"./store\";\nimport DisplayOptions from \"./displayoptions\";\nimport { EPUBJS_VERSION, EVENTS } from \"./utils/constants\";\nvar CONTAINER_PATH = \"META-INF/container.xml\";\nvar IBOOKS_DISPLAY_OPTIONS_PATH = \"META-INF/com.apple.ibooks.display-options.xml\";\nvar INPUT_TYPE = {\n  BINARY: \"binary\",\n  BASE64: \"base64\",\n  EPUB: \"epub\",\n  OPF: \"opf\",\n  MANIFEST: \"json\",\n  DIRECTORY: \"directory\"\n};\n\n/**\n * An Epub representation with methods for the loading, parsing and manipulation\n * of its contents.\n * @class\n * @param {string} [url]\n * @param {object} [options]\n * @param {method} [options.requestMethod] a request function to use instead of the default\n * @param {boolean} [options.requestCredentials=undefined] send the xhr request withCredentials\n * @param {object} [options.requestHeaders=undefined] send the xhr request headers\n * @param {string} [options.encoding=binary] optional to pass 'binary' or base64' for archived Epubs\n * @param {string} [options.replacements=none] use base64, blobUrl, or none for replacing assets in archived Epubs\n * @param {method} [options.canonical] optional function to determine canonical urls for a path\n * @param {string} [options.openAs] optional string to determine the input type\n * @param {string} [options.store=false] cache the contents in local storage, value should be the name of the reader\n * @returns {Book}\n * @example new Book(\"/path/to/book.epub\", {})\n * @example new Book({ replacements: \"blobUrl\" })\n */\nvar Book = /*#__PURE__*/function () {\n  function Book(url, options) {\n    var _this = this;\n    _classCallCheck(this, Book);\n    // Allow passing just options to the Book\n    if (typeof options === \"undefined\" && typeof url !== \"string\" && url instanceof Blob === false && url instanceof ArrayBuffer === false) {\n      options = url;\n      url = undefined;\n    }\n    this.settings = extend(this.settings || {}, {\n      requestMethod: undefined,\n      requestCredentials: undefined,\n      requestHeaders: undefined,\n      encoding: undefined,\n      replacements: undefined,\n      canonical: undefined,\n      openAs: undefined,\n      store: undefined\n    });\n    extend(this.settings, options);\n\n    // Promises\n    this.opening = new defer();\n    /**\n     * @member {promise} opened returns after the book is loaded\n     * @memberof Book\n     */\n    this.opened = this.opening.promise;\n    this.isOpen = false;\n    this.loading = {\n      manifest: new defer(),\n      spine: new defer(),\n      metadata: new defer(),\n      cover: new defer(),\n      navigation: new defer(),\n      pageList: new defer(),\n      resources: new defer(),\n      displayOptions: new defer()\n    };\n    this.loaded = {\n      manifest: this.loading.manifest.promise,\n      spine: this.loading.spine.promise,\n      metadata: this.loading.metadata.promise,\n      cover: this.loading.cover.promise,\n      navigation: this.loading.navigation.promise,\n      pageList: this.loading.pageList.promise,\n      resources: this.loading.resources.promise,\n      displayOptions: this.loading.displayOptions.promise\n    };\n\n    /**\n     * @member {promise} ready returns after the book is loaded and parsed\n     * @memberof Book\n     * @private\n     */\n    this.ready = Promise.all([this.loaded.manifest, this.loaded.spine, this.loaded.metadata, this.loaded.cover, this.loaded.navigation, this.loaded.resources, this.loaded.displayOptions]);\n\n    // Queue for methods used before opening\n    this.isRendered = false;\n    // this._q = queue(this);\n\n    /**\n     * @member {method} request\n     * @memberof Book\n     * @private\n     */\n    this.request = this.settings.requestMethod || request;\n\n    /**\n     * @member {Spine} spine\n     * @memberof Book\n     */\n    this.spine = new Spine();\n\n    /**\n     * @member {Locations} locations\n     * @memberof Book\n     */\n    this.locations = new Locations(this.spine, this.load.bind(this));\n\n    /**\n     * @member {Navigation} navigation\n     * @memberof Book\n     */\n    this.navigation = undefined;\n\n    /**\n     * @member {PageList} pagelist\n     * @memberof Book\n     */\n    this.pageList = undefined;\n\n    /**\n     * @member {Url} url\n     * @memberof Book\n     * @private\n     */\n    this.url = undefined;\n\n    /**\n     * @member {Path} path\n     * @memberof Book\n     * @private\n     */\n    this.path = undefined;\n\n    /**\n     * @member {boolean} archived\n     * @memberof Book\n     * @private\n     */\n    this.archived = false;\n\n    /**\n     * @member {Archive} archive\n     * @memberof Book\n     * @private\n     */\n    this.archive = undefined;\n\n    /**\n     * @member {Store} storage\n     * @memberof Book\n     * @private\n     */\n    this.storage = undefined;\n\n    /**\n     * @member {Resources} resources\n     * @memberof Book\n     * @private\n     */\n    this.resources = undefined;\n\n    /**\n     * @member {Rendition} rendition\n     * @memberof Book\n     * @private\n     */\n    this.rendition = undefined;\n\n    /**\n     * @member {Container} container\n     * @memberof Book\n     * @private\n     */\n    this.container = undefined;\n\n    /**\n     * @member {Packaging} packaging\n     * @memberof Book\n     * @private\n     */\n    this.packaging = undefined;\n\n    /**\n     * @member {DisplayOptions} displayOptions\n     * @memberof DisplayOptions\n     * @private\n     */\n    this.displayOptions = undefined;\n\n    // this.toc = undefined;\n    if (this.settings.store) {\n      this.store(this.settings.store);\n    }\n    if (url) {\n      this.open(url, this.settings.openAs).catch(function (error) {\n        var err = new Error(\"Cannot load book at \" + url);\n        _this.emit(EVENTS.BOOK.OPEN_FAILED, err);\n      });\n    }\n  }\n\n  /**\n   * Open a epub or url\n   * @param {string | ArrayBuffer} input Url, Path or ArrayBuffer\n   * @param {string} [what=\"binary\", \"base64\", \"epub\", \"opf\", \"json\", \"directory\"] force opening as a certain type\n   * @returns {Promise} of when the book has been loaded\n   * @example book.open(\"/path/to/book.epub\")\n   */\n  _createClass(Book, [{\n    key: \"open\",\n    value: function open(input, what) {\n      var opening;\n      var type = what || this.determineType(input);\n      if (type === INPUT_TYPE.BINARY) {\n        this.archived = true;\n        this.url = new Url(\"/\", \"\");\n        opening = this.openEpub(input);\n      } else if (type === INPUT_TYPE.BASE64) {\n        this.archived = true;\n        this.url = new Url(\"/\", \"\");\n        opening = this.openEpub(input, type);\n      } else if (type === INPUT_TYPE.EPUB) {\n        this.archived = true;\n        this.url = new Url(\"/\", \"\");\n        opening = this.request(input, \"binary\", this.settings.requestCredentials, this.settings.requestHeaders).then(this.openEpub.bind(this));\n      } else if (type == INPUT_TYPE.OPF) {\n        this.url = new Url(input);\n        opening = this.openPackaging(this.url.Path.toString());\n      } else if (type == INPUT_TYPE.MANIFEST) {\n        this.url = new Url(input);\n        opening = this.openManifest(this.url.Path.toString());\n      } else {\n        this.url = new Url(input);\n        opening = this.openContainer(CONTAINER_PATH).then(this.openPackaging.bind(this));\n      }\n      return opening;\n    }\n\n    /**\n     * Open an archived epub\n     * @private\n     * @param  {binary} data\n     * @param  {string} [encoding]\n     * @return {Promise}\n     */\n  }, {\n    key: \"openEpub\",\n    value: function openEpub(data, encoding) {\n      var _this2 = this;\n      return this.unarchive(data, encoding || this.settings.encoding).then(function () {\n        return _this2.openContainer(CONTAINER_PATH);\n      }).then(function (packagePath) {\n        return _this2.openPackaging(packagePath);\n      });\n    }\n\n    /**\n     * Open the epub container\n     * @private\n     * @param  {string} url\n     * @return {string} packagePath\n     */\n  }, {\n    key: \"openContainer\",\n    value: function openContainer(url) {\n      var _this3 = this;\n      return this.load(url).then(function (xml) {\n        _this3.container = new Container(xml);\n        return _this3.resolve(_this3.container.packagePath);\n      });\n    }\n\n    /**\n     * Open the Open Packaging Format Xml\n     * @private\n     * @param  {string} url\n     * @return {Promise}\n     */\n  }, {\n    key: \"openPackaging\",\n    value: function openPackaging(url) {\n      var _this4 = this;\n      this.path = new Path(url);\n      return this.load(url).then(function (xml) {\n        _this4.packaging = new Packaging(xml);\n        return _this4.unpack(_this4.packaging);\n      });\n    }\n\n    /**\n     * Open the manifest JSON\n     * @private\n     * @param  {string} url\n     * @return {Promise}\n     */\n  }, {\n    key: \"openManifest\",\n    value: function openManifest(url) {\n      var _this5 = this;\n      this.path = new Path(url);\n      return this.load(url).then(function (json) {\n        _this5.packaging = new Packaging();\n        _this5.packaging.load(json);\n        return _this5.unpack(_this5.packaging);\n      });\n    }\n\n    /**\n     * Load a resource from the Book\n     * @param  {string} path path to the resource to load\n     * @return {Promise}     returns a promise with the requested resource\n     */\n  }, {\n    key: \"load\",\n    value: function load(path) {\n      var resolved = this.resolve(path);\n      if (this.archived) {\n        return this.archive.request(resolved);\n      } else {\n        return this.request(resolved, null, this.settings.requestCredentials, this.settings.requestHeaders);\n      }\n    }\n\n    /**\n     * Resolve a path to it's absolute position in the Book\n     * @param  {string} path\n     * @param  {boolean} [absolute] force resolving the full URL\n     * @return {string}          the resolved path string\n     */\n  }, {\n    key: \"resolve\",\n    value: function resolve(path, absolute) {\n      if (!path) {\n        return;\n      }\n      var resolved = path;\n      var isAbsolute = path.indexOf(\"://\") > -1;\n      if (isAbsolute) {\n        return path;\n      }\n      if (this.path) {\n        resolved = this.path.resolve(path);\n      }\n      if (absolute != false && this.url) {\n        resolved = this.url.resolve(resolved);\n      }\n      return resolved;\n    }\n\n    /**\n     * Get a canonical link to a path\n     * @param  {string} path\n     * @return {string} the canonical path string\n     */\n  }, {\n    key: \"canonical\",\n    value: function canonical(path) {\n      var url = path;\n      if (!path) {\n        return \"\";\n      }\n      if (this.settings.canonical) {\n        url = this.settings.canonical(path);\n      } else {\n        url = this.resolve(path, true);\n      }\n      return url;\n    }\n\n    /**\n     * Determine the type of they input passed to open\n     * @private\n     * @param  {string} input\n     * @return {string}  binary | directory | epub | opf\n     */\n  }, {\n    key: \"determineType\",\n    value: function determineType(input) {\n      var url;\n      var path;\n      var extension;\n      if (this.settings.encoding === \"base64\") {\n        return INPUT_TYPE.BASE64;\n      }\n      if (typeof input != \"string\") {\n        return INPUT_TYPE.BINARY;\n      }\n      url = new Url(input);\n      path = url.path();\n      extension = path.extension;\n\n      // If there's a search string, remove it before determining type\n      if (extension) {\n        extension = extension.replace(/\\?.*$/, \"\");\n      }\n      if (!extension) {\n        return INPUT_TYPE.DIRECTORY;\n      }\n      if (extension === \"epub\") {\n        return INPUT_TYPE.EPUB;\n      }\n      if (extension === \"opf\") {\n        return INPUT_TYPE.OPF;\n      }\n      if (extension === \"json\") {\n        return INPUT_TYPE.MANIFEST;\n      }\n    }\n\n    /**\n     * unpack the contents of the Books packaging\n     * @private\n     * @param {Packaging} packaging object\n     */\n  }, {\n    key: \"unpack\",\n    value: function unpack(packaging) {\n      var _this6 = this;\n      this.package = packaging; //TODO: deprecated this\n\n      if (this.packaging.metadata.layout === \"\") {\n        // rendition:layout not set - check display options if book is pre-paginated\n        this.load(this.url.resolve(IBOOKS_DISPLAY_OPTIONS_PATH)).then(function (xml) {\n          _this6.displayOptions = new DisplayOptions(xml);\n          _this6.loading.displayOptions.resolve(_this6.displayOptions);\n        }).catch(function (err) {\n          _this6.displayOptions = new DisplayOptions();\n          _this6.loading.displayOptions.resolve(_this6.displayOptions);\n        });\n      } else {\n        this.displayOptions = new DisplayOptions();\n        this.loading.displayOptions.resolve(this.displayOptions);\n      }\n      this.spine.unpack(this.packaging, this.resolve.bind(this), this.canonical.bind(this));\n      this.resources = new Resources(this.packaging.manifest, {\n        archive: this.archive,\n        resolver: this.resolve.bind(this),\n        request: this.request.bind(this),\n        replacements: this.settings.replacements || (this.archived ? \"blobUrl\" : \"base64\")\n      });\n      this.loadNavigation(this.packaging).then(function () {\n        // this.toc = this.navigation.toc;\n        _this6.loading.navigation.resolve(_this6.navigation);\n      });\n      if (this.packaging.coverPath) {\n        this.cover = this.resolve(this.packaging.coverPath);\n      }\n      // Resolve promises\n      this.loading.manifest.resolve(this.packaging.manifest);\n      this.loading.metadata.resolve(this.packaging.metadata);\n      this.loading.spine.resolve(this.spine);\n      this.loading.cover.resolve(this.cover);\n      this.loading.resources.resolve(this.resources);\n      this.loading.pageList.resolve(this.pageList);\n      this.isOpen = true;\n      if (this.archived || this.settings.replacements && this.settings.replacements != \"none\") {\n        this.replacements().then(function () {\n          _this6.loaded.displayOptions.then(function () {\n            _this6.opening.resolve(_this6);\n          });\n        }).catch(function (err) {\n          console.error(err);\n        });\n      } else {\n        // Resolve book opened promise\n        this.loaded.displayOptions.then(function () {\n          _this6.opening.resolve(_this6);\n        });\n      }\n    }\n\n    /**\n     * Load Navigation and PageList from package\n     * @private\n     * @param {Packaging} packaging\n     */\n  }, {\n    key: \"loadNavigation\",\n    value: function loadNavigation(packaging) {\n      var _this7 = this;\n      var navPath = packaging.navPath || packaging.ncxPath;\n      var toc = packaging.toc;\n\n      // From json manifest\n      if (toc) {\n        return new Promise(function (resolve, reject) {\n          _this7.navigation = new Navigation(toc);\n          if (packaging.pageList) {\n            _this7.pageList = new PageList(packaging.pageList); // TODO: handle page lists from Manifest\n          }\n\n          resolve(_this7.navigation);\n        });\n      }\n      if (!navPath) {\n        return new Promise(function (resolve, reject) {\n          _this7.navigation = new Navigation();\n          _this7.pageList = new PageList();\n          resolve(_this7.navigation);\n        });\n      }\n      return this.load(navPath, \"xml\").then(function (xml) {\n        _this7.navigation = new Navigation(xml);\n        _this7.pageList = new PageList(xml);\n        return _this7.navigation;\n      });\n    }\n\n    /**\n     * Gets a Section of the Book from the Spine\n     * Alias for `book.spine.get`\n     * @param {string} target\n     * @return {Section}\n     */\n  }, {\n    key: \"section\",\n    value: function section(target) {\n      return this.spine.get(target);\n    }\n\n    /**\n     * Sugar to render a book to an element\n     * @param  {element | string} element element or string to add a rendition to\n     * @param  {object} [options]\n     * @return {Rendition}\n     */\n  }, {\n    key: \"renderTo\",\n    value: function renderTo(element, options) {\n      this.rendition = new Rendition(this, options);\n      this.rendition.attachTo(element);\n      return this.rendition;\n    }\n\n    /**\n     * Set if request should use withCredentials\n     * @param {boolean} credentials\n     */\n  }, {\n    key: \"setRequestCredentials\",\n    value: function setRequestCredentials(credentials) {\n      this.settings.requestCredentials = credentials;\n    }\n\n    /**\n     * Set headers request should use\n     * @param {object} headers\n     */\n  }, {\n    key: \"setRequestHeaders\",\n    value: function setRequestHeaders(headers) {\n      this.settings.requestHeaders = headers;\n    }\n\n    /**\n     * Unarchive a zipped epub\n     * @private\n     * @param  {binary} input epub data\n     * @param  {string} [encoding]\n     * @return {Archive}\n     */\n  }, {\n    key: \"unarchive\",\n    value: function unarchive(input, encoding) {\n      this.archive = new Archive();\n      return this.archive.open(input, encoding);\n    }\n\n    /**\n     * Store the epubs contents\n     * @private\n     * @param  {binary} input epub data\n     * @param  {string} [encoding]\n     * @return {Store}\n     */\n  }, {\n    key: \"store\",\n    value: function store(name) {\n      var _this8 = this;\n      // Use \"blobUrl\" or \"base64\" for replacements\n      var replacementsSetting = this.settings.replacements && this.settings.replacements !== \"none\";\n      // Save original url\n      var originalUrl = this.url;\n      // Save original request method\n      var requester = this.settings.requestMethod || request.bind(this);\n      // Create new Store\n      this.storage = new Store(name, requester, this.resolve.bind(this));\n      // Replace request method to go through store\n      this.request = this.storage.request.bind(this.storage);\n      this.opened.then(function () {\n        if (_this8.archived) {\n          _this8.storage.requester = _this8.archive.request.bind(_this8.archive);\n        }\n        // Substitute hook\n        var substituteResources = function substituteResources(output, section) {\n          section.output = _this8.resources.substitute(output, section.url);\n        };\n\n        // Set to use replacements\n        _this8.resources.settings.replacements = replacementsSetting || \"blobUrl\";\n        // Create replacement urls\n        _this8.resources.replacements().then(function () {\n          return _this8.resources.replaceCss();\n        });\n        _this8.storage.on(\"offline\", function () {\n          // Remove url to use relative resolving for hrefs\n          _this8.url = new Url(\"/\", \"\");\n          // Add hook to replace resources in contents\n          _this8.spine.hooks.serialize.register(substituteResources);\n        });\n        _this8.storage.on(\"online\", function () {\n          // Restore original url\n          _this8.url = originalUrl;\n          // Remove hook\n          _this8.spine.hooks.serialize.deregister(substituteResources);\n        });\n      });\n      return this.storage;\n    }\n\n    /**\n     * Get the cover url\n     * @return {Promise<?string>} coverUrl\n     */\n  }, {\n    key: \"coverUrl\",\n    value: function coverUrl() {\n      var _this9 = this;\n      return this.loaded.cover.then(function () {\n        if (!_this9.cover) {\n          return null;\n        }\n        if (_this9.archived) {\n          return _this9.archive.createUrl(_this9.cover);\n        } else {\n          return _this9.cover;\n        }\n      });\n    }\n\n    /**\n     * Load replacement urls\n     * @private\n     * @return {Promise} completed loading urls\n     */\n  }, {\n    key: \"replacements\",\n    value: function replacements() {\n      var _this10 = this;\n      this.spine.hooks.serialize.register(function (output, section) {\n        section.output = _this10.resources.substitute(output, section.url);\n      });\n      return this.resources.replacements().then(function () {\n        return _this10.resources.replaceCss();\n      });\n    }\n\n    /**\n     * Find a DOM Range for a given CFI Range\n     * @param  {EpubCFI} cfiRange a epub cfi range\n     * @return {Promise}\n     */\n  }, {\n    key: \"getRange\",\n    value: function getRange(cfiRange) {\n      var cfi = new EpubCFI(cfiRange);\n      var item = this.spine.get(cfi.spinePos);\n      var _request = this.load.bind(this);\n      if (!item) {\n        return new Promise(function (resolve, reject) {\n          reject(\"CFI could not be found\");\n        });\n      }\n      return item.load(_request).then(function (contents) {\n        var range = cfi.toRange(item.document);\n        return range;\n      });\n    }\n\n    /**\n     * Generates the Book Key using the identifier in the manifest or other string provided\n     * @param  {string} [identifier] to use instead of metadata identifier\n     * @return {string} key\n     */\n  }, {\n    key: \"key\",\n    value: function key(identifier) {\n      var ident = identifier || this.packaging.metadata.identifier || this.url.filename;\n      return \"epubjs:\".concat(EPUBJS_VERSION, \":\").concat(ident);\n    }\n\n    /**\n     * Destroy the Book and all associated objects\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.opened = undefined;\n      this.loading = undefined;\n      this.loaded = undefined;\n      this.ready = undefined;\n      this.isOpen = false;\n      this.isRendered = false;\n      this.spine && this.spine.destroy();\n      this.locations && this.locations.destroy();\n      this.pageList && this.pageList.destroy();\n      this.archive && this.archive.destroy();\n      this.resources && this.resources.destroy();\n      this.container && this.container.destroy();\n      this.packaging && this.packaging.destroy();\n      this.rendition && this.rendition.destroy();\n      this.displayOptions && this.displayOptions.destroy();\n      this.spine = undefined;\n      this.locations = undefined;\n      this.pageList = undefined;\n      this.archive = undefined;\n      this.resources = undefined;\n      this.container = undefined;\n      this.packaging = undefined;\n      this.rendition = undefined;\n      this.navigation = undefined;\n      this.url = undefined;\n      this.path = undefined;\n      this.archived = false;\n    }\n  }]);\n  return Book;\n}(); //-- Enable binding events to book\nEventEmitter(Book.prototype);\nexport default Book;","map":{"version":3,"names":["EventEmitter","extend","defer","Url","Path","Spine","Locations","Container","Packaging","Navigation","Resources","PageList","Rendition","Archive","request","EpubCFI","Store","DisplayOptions","EPUBJS_VERSION","EVENTS","CONTAINER_PATH","IBOOKS_DISPLAY_OPTIONS_PATH","INPUT_TYPE","BINARY","BASE64","EPUB","OPF","MANIFEST","DIRECTORY","Book","url","options","_this","_classCallCheck","Blob","ArrayBuffer","undefined","settings","requestMethod","requestCredentials","requestHeaders","encoding","replacements","canonical","openAs","store","opening","opened","promise","isOpen","loading","manifest","spine","metadata","cover","navigation","pageList","resources","displayOptions","loaded","ready","Promise","all","isRendered","locations","load","bind","path","archived","archive","storage","rendition","container","packaging","open","catch","error","err","Error","emit","BOOK","OPEN_FAILED","_createClass","key","value","input","what","type","determineType","openEpub","then","openPackaging","toString","openManifest","openContainer","data","_this2","unarchive","packagePath","_this3","xml","resolve","_this4","unpack","_this5","json","resolved","absolute","isAbsolute","indexOf","extension","replace","_this6","package","layout","resolver","loadNavigation","coverPath","console","_this7","navPath","ncxPath","toc","reject","section","target","get","renderTo","element","attachTo","setRequestCredentials","credentials","setRequestHeaders","headers","name","_this8","replacementsSetting","originalUrl","requester","substituteResources","output","substitute","replaceCss","on","hooks","serialize","register","deregister","coverUrl","_this9","createUrl","_this10","getRange","cfiRange","cfi","item","spinePos","_request","contents","range","toRange","document","identifier","ident","filename","concat","destroy","prototype"],"sources":["C:/Users/barbu/Desktop/projeto-Akin/node_modules/epubjs/src/book.js"],"sourcesContent":["import EventEmitter from \"event-emitter\";\nimport {extend, defer} from \"./utils/core\";\nimport Url from \"./utils/url\";\nimport Path from \"./utils/path\";\nimport Spine from \"./spine\";\nimport Locations from \"./locations\";\nimport Container from \"./container\";\nimport Packaging from \"./packaging\";\nimport Navigation from \"./navigation\";\nimport Resources from \"./resources\";\nimport PageList from \"./pagelist\";\nimport Rendition from \"./rendition\";\nimport Archive from \"./archive\";\nimport request from \"./utils/request\";\nimport EpubCFI from \"./epubcfi\";\nimport Store from \"./store\";\nimport DisplayOptions from \"./displayoptions\";\nimport { EPUBJS_VERSION, EVENTS } from \"./utils/constants\";\n\nconst CONTAINER_PATH = \"META-INF/container.xml\";\nconst IBOOKS_DISPLAY_OPTIONS_PATH = \"META-INF/com.apple.ibooks.display-options.xml\";\n\nconst INPUT_TYPE = {\n\tBINARY: \"binary\",\n\tBASE64: \"base64\",\n\tEPUB: \"epub\",\n\tOPF: \"opf\",\n\tMANIFEST: \"json\",\n\tDIRECTORY: \"directory\"\n};\n\n/**\n * An Epub representation with methods for the loading, parsing and manipulation\n * of its contents.\n * @class\n * @param {string} [url]\n * @param {object} [options]\n * @param {method} [options.requestMethod] a request function to use instead of the default\n * @param {boolean} [options.requestCredentials=undefined] send the xhr request withCredentials\n * @param {object} [options.requestHeaders=undefined] send the xhr request headers\n * @param {string} [options.encoding=binary] optional to pass 'binary' or base64' for archived Epubs\n * @param {string} [options.replacements=none] use base64, blobUrl, or none for replacing assets in archived Epubs\n * @param {method} [options.canonical] optional function to determine canonical urls for a path\n * @param {string} [options.openAs] optional string to determine the input type\n * @param {string} [options.store=false] cache the contents in local storage, value should be the name of the reader\n * @returns {Book}\n * @example new Book(\"/path/to/book.epub\", {})\n * @example new Book({ replacements: \"blobUrl\" })\n */\nclass Book {\n\tconstructor(url, options) {\n\t\t// Allow passing just options to the Book\n\t\tif (typeof(options) === \"undefined\" &&\n\t\t\t  typeof(url) !== \"string\" &&\n\t\t    url instanceof Blob === false &&\n\t\t    url instanceof ArrayBuffer === false) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\tthis.settings = extend(this.settings || {}, {\n\t\t\trequestMethod: undefined,\n\t\t\trequestCredentials: undefined,\n\t\t\trequestHeaders: undefined,\n\t\t\tencoding: undefined,\n\t\t\treplacements: undefined,\n\t\t\tcanonical: undefined,\n\t\t\topenAs: undefined,\n\t\t\tstore: undefined\n\t\t});\n\n\t\textend(this.settings, options);\n\n\n\t\t// Promises\n\t\tthis.opening = new defer();\n\t\t/**\n\t\t * @member {promise} opened returns after the book is loaded\n\t\t * @memberof Book\n\t\t */\n\t\tthis.opened = this.opening.promise;\n\t\tthis.isOpen = false;\n\n\t\tthis.loading = {\n\t\t\tmanifest: new defer(),\n\t\t\tspine: new defer(),\n\t\t\tmetadata: new defer(),\n\t\t\tcover: new defer(),\n\t\t\tnavigation: new defer(),\n\t\t\tpageList: new defer(),\n\t\t\tresources: new defer(),\n\t\t\tdisplayOptions: new defer()\n\t\t};\n\n\t\tthis.loaded = {\n\t\t\tmanifest: this.loading.manifest.promise,\n\t\t\tspine: this.loading.spine.promise,\n\t\t\tmetadata: this.loading.metadata.promise,\n\t\t\tcover: this.loading.cover.promise,\n\t\t\tnavigation: this.loading.navigation.promise,\n\t\t\tpageList: this.loading.pageList.promise,\n\t\t\tresources: this.loading.resources.promise,\n\t\t\tdisplayOptions: this.loading.displayOptions.promise\n\t\t};\n\n\t\t/**\n\t\t * @member {promise} ready returns after the book is loaded and parsed\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.ready = Promise.all([\n\t\t\tthis.loaded.manifest,\n\t\t\tthis.loaded.spine,\n\t\t\tthis.loaded.metadata,\n\t\t\tthis.loaded.cover,\n\t\t\tthis.loaded.navigation,\n\t\t\tthis.loaded.resources,\n\t\t\tthis.loaded.displayOptions\n\t\t]);\n\n\n\t\t// Queue for methods used before opening\n\t\tthis.isRendered = false;\n\t\t// this._q = queue(this);\n\n\t\t/**\n\t\t * @member {method} request\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.request = this.settings.requestMethod || request;\n\n\t\t/**\n\t\t * @member {Spine} spine\n\t\t * @memberof Book\n\t\t */\n\t\tthis.spine = new Spine();\n\n\t\t/**\n\t\t * @member {Locations} locations\n\t\t * @memberof Book\n\t\t */\n\t\tthis.locations = new Locations(this.spine, this.load.bind(this));\n\n\t\t/**\n\t\t * @member {Navigation} navigation\n\t\t * @memberof Book\n\t\t */\n\t\tthis.navigation = undefined;\n\n\t\t/**\n\t\t * @member {PageList} pagelist\n\t\t * @memberof Book\n\t\t */\n\t\tthis.pageList = undefined;\n\n\t\t/**\n\t\t * @member {Url} url\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.url = undefined;\n\n\t\t/**\n\t\t * @member {Path} path\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.path = undefined;\n\n\t\t/**\n\t\t * @member {boolean} archived\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.archived = false;\n\n\t\t/**\n\t\t * @member {Archive} archive\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.archive = undefined;\n\n\t\t/**\n\t\t * @member {Store} storage\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.storage = undefined;\n\n\t\t/**\n\t\t * @member {Resources} resources\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.resources = undefined;\n\n\t\t/**\n\t\t * @member {Rendition} rendition\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.rendition = undefined;\n\n\t\t/**\n\t\t * @member {Container} container\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.container = undefined;\n\n\t\t/**\n\t\t * @member {Packaging} packaging\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.packaging = undefined;\n\n\t\t/**\n\t\t * @member {DisplayOptions} displayOptions\n\t\t * @memberof DisplayOptions\n\t\t * @private\n\t\t */\n\t\tthis.displayOptions = undefined;\n\n\t\t// this.toc = undefined;\n\t\tif (this.settings.store) {\n\t\t\tthis.store(this.settings.store);\n\t\t}\n\n\t\tif(url) {\n\t\t\tthis.open(url, this.settings.openAs).catch((error) => {\n\t\t\t\tvar err = new Error(\"Cannot load book at \"+ url );\n\t\t\t\tthis.emit(EVENTS.BOOK.OPEN_FAILED, err);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Open a epub or url\n\t * @param {string | ArrayBuffer} input Url, Path or ArrayBuffer\n\t * @param {string} [what=\"binary\", \"base64\", \"epub\", \"opf\", \"json\", \"directory\"] force opening as a certain type\n\t * @returns {Promise} of when the book has been loaded\n\t * @example book.open(\"/path/to/book.epub\")\n\t */\n\topen(input, what) {\n\t\tvar opening;\n\t\tvar type = what || this.determineType(input);\n\n\t\tif (type === INPUT_TYPE.BINARY) {\n\t\t\tthis.archived = true;\n\t\t\tthis.url = new Url(\"/\", \"\");\n\t\t\topening = this.openEpub(input);\n\t\t} else if (type === INPUT_TYPE.BASE64) {\n\t\t\tthis.archived = true;\n\t\t\tthis.url = new Url(\"/\", \"\");\n\t\t\topening = this.openEpub(input, type);\n\t\t} else if (type === INPUT_TYPE.EPUB) {\n\t\t\tthis.archived = true;\n\t\t\tthis.url = new Url(\"/\", \"\");\n\t\t\topening = this.request(input, \"binary\", this.settings.requestCredentials, this.settings.requestHeaders)\n\t\t\t\t.then(this.openEpub.bind(this));\n\t\t} else if(type == INPUT_TYPE.OPF) {\n\t\t\tthis.url = new Url(input);\n\t\t\topening = this.openPackaging(this.url.Path.toString());\n\t\t} else if(type == INPUT_TYPE.MANIFEST) {\n\t\t\tthis.url = new Url(input);\n\t\t\topening = this.openManifest(this.url.Path.toString());\n\t\t} else {\n\t\t\tthis.url = new Url(input);\n\t\t\topening = this.openContainer(CONTAINER_PATH)\n\t\t\t\t.then(this.openPackaging.bind(this));\n\t\t}\n\n\t\treturn opening;\n\t}\n\n\t/**\n\t * Open an archived epub\n\t * @private\n\t * @param  {binary} data\n\t * @param  {string} [encoding]\n\t * @return {Promise}\n\t */\n\topenEpub(data, encoding) {\n\t\treturn this.unarchive(data, encoding || this.settings.encoding)\n\t\t\t.then(() => {\n\t\t\t\treturn this.openContainer(CONTAINER_PATH);\n\t\t\t})\n\t\t\t.then((packagePath) => {\n\t\t\t\treturn this.openPackaging(packagePath);\n\t\t\t});\n\t}\n\n\t/**\n\t * Open the epub container\n\t * @private\n\t * @param  {string} url\n\t * @return {string} packagePath\n\t */\n\topenContainer(url) {\n\t\treturn this.load(url)\n\t\t\t.then((xml) => {\n\t\t\t\tthis.container = new Container(xml);\n\t\t\t\treturn this.resolve(this.container.packagePath);\n\t\t\t});\n\t}\n\n\t/**\n\t * Open the Open Packaging Format Xml\n\t * @private\n\t * @param  {string} url\n\t * @return {Promise}\n\t */\n\topenPackaging(url) {\n\t\tthis.path = new Path(url);\n\t\treturn this.load(url)\n\t\t\t.then((xml) => {\n\t\t\t\tthis.packaging = new Packaging(xml);\n\t\t\t\treturn this.unpack(this.packaging);\n\t\t\t});\n\t}\n\n\t/**\n\t * Open the manifest JSON\n\t * @private\n\t * @param  {string} url\n\t * @return {Promise}\n\t */\n\topenManifest(url) {\n\t\tthis.path = new Path(url);\n\t\treturn this.load(url)\n\t\t\t.then((json) => {\n\t\t\t\tthis.packaging = new Packaging();\n\t\t\t\tthis.packaging.load(json);\n\t\t\t\treturn this.unpack(this.packaging);\n\t\t\t});\n\t}\n\n\t/**\n\t * Load a resource from the Book\n\t * @param  {string} path path to the resource to load\n\t * @return {Promise}     returns a promise with the requested resource\n\t */\n\tload(path) {\n\t\tvar resolved = this.resolve(path);\n\t\tif(this.archived) {\n\t\t\treturn this.archive.request(resolved);\n\t\t} else {\n\t\t\treturn this.request(resolved, null, this.settings.requestCredentials, this.settings.requestHeaders);\n\t\t}\n\t}\n\n\t/**\n\t * Resolve a path to it's absolute position in the Book\n\t * @param  {string} path\n\t * @param  {boolean} [absolute] force resolving the full URL\n\t * @return {string}          the resolved path string\n\t */\n\tresolve(path, absolute) {\n\t\tif (!path) {\n\t\t\treturn;\n\t\t}\n\t\tvar resolved = path;\n\t\tvar isAbsolute = (path.indexOf(\"://\") > -1);\n\n\t\tif (isAbsolute) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (this.path) {\n\t\t\tresolved = this.path.resolve(path);\n\t\t}\n\n\t\tif(absolute != false && this.url) {\n\t\t\tresolved = this.url.resolve(resolved);\n\t\t}\n\n\t\treturn resolved;\n\t}\n\n\t/**\n\t * Get a canonical link to a path\n\t * @param  {string} path\n\t * @return {string} the canonical path string\n\t */\n\tcanonical(path) {\n\t\tvar url = path;\n\n\t\tif (!path) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tif (this.settings.canonical) {\n\t\t\turl = this.settings.canonical(path);\n\t\t} else {\n\t\t\turl = this.resolve(path, true);\n\t\t}\n\n\t\treturn url;\n\t}\n\n\t/**\n\t * Determine the type of they input passed to open\n\t * @private\n\t * @param  {string} input\n\t * @return {string}  binary | directory | epub | opf\n\t */\n\tdetermineType(input) {\n\t\tvar url;\n\t\tvar path;\n\t\tvar extension;\n\n\t\tif (this.settings.encoding === \"base64\") {\n\t\t\treturn INPUT_TYPE.BASE64;\n\t\t}\n\n\t\tif(typeof(input) != \"string\") {\n\t\t\treturn INPUT_TYPE.BINARY;\n\t\t}\n\n\t\turl = new Url(input);\n\t\tpath = url.path();\n\t\textension = path.extension;\n\n\t\t// If there's a search string, remove it before determining type\n\t\tif (extension) {\n\t\t\textension = extension.replace(/\\?.*$/, \"\");\n\t\t}\n\n\t\tif (!extension) {\n\t\t\treturn INPUT_TYPE.DIRECTORY;\n\t\t}\n\n\t\tif(extension === \"epub\"){\n\t\t\treturn INPUT_TYPE.EPUB;\n\t\t}\n\n\t\tif(extension === \"opf\"){\n\t\t\treturn INPUT_TYPE.OPF;\n\t\t}\n\n\t\tif(extension === \"json\"){\n\t\t\treturn INPUT_TYPE.MANIFEST;\n\t\t}\n\t}\n\n\n\t/**\n\t * unpack the contents of the Books packaging\n\t * @private\n\t * @param {Packaging} packaging object\n\t */\n\tunpack(packaging) {\n\t\tthis.package = packaging; //TODO: deprecated this\n\n\t\tif (this.packaging.metadata.layout === \"\") {\n\t\t\t// rendition:layout not set - check display options if book is pre-paginated\n\t\t\tthis.load(this.url.resolve(IBOOKS_DISPLAY_OPTIONS_PATH)).then((xml) => {\n\t\t\t\tthis.displayOptions = new DisplayOptions(xml);\n\t\t\t\tthis.loading.displayOptions.resolve(this.displayOptions);\n\t\t\t}).catch((err) => {\n\t\t\t\tthis.displayOptions = new DisplayOptions();\n\t\t\t\tthis.loading.displayOptions.resolve(this.displayOptions);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.displayOptions = new DisplayOptions();\n\t\t\tthis.loading.displayOptions.resolve(this.displayOptions);\n\t\t}\n\n\t\tthis.spine.unpack(this.packaging, this.resolve.bind(this), this.canonical.bind(this));\n\n\t\tthis.resources = new Resources(this.packaging.manifest, {\n\t\t\tarchive: this.archive,\n\t\t\tresolver: this.resolve.bind(this),\n\t\t\trequest: this.request.bind(this),\n\t\t\treplacements: this.settings.replacements || (this.archived ? \"blobUrl\" : \"base64\")\n\t\t});\n\n\t\tthis.loadNavigation(this.packaging).then(() => {\n\t\t\t// this.toc = this.navigation.toc;\n\t\t\tthis.loading.navigation.resolve(this.navigation);\n\t\t});\n\n\t\tif (this.packaging.coverPath) {\n\t\t\tthis.cover = this.resolve(this.packaging.coverPath);\n\t\t}\n\t\t// Resolve promises\n\t\tthis.loading.manifest.resolve(this.packaging.manifest);\n\t\tthis.loading.metadata.resolve(this.packaging.metadata);\n\t\tthis.loading.spine.resolve(this.spine);\n\t\tthis.loading.cover.resolve(this.cover);\n\t\tthis.loading.resources.resolve(this.resources);\n\t\tthis.loading.pageList.resolve(this.pageList);\n\n\t\tthis.isOpen = true;\n\n\t\tif(this.archived || this.settings.replacements && this.settings.replacements != \"none\") {\n\t\t\tthis.replacements().then(() => {\n\t\t\t\tthis.loaded.displayOptions.then(() => {\n\t\t\t\t\tthis.opening.resolve(this);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t\t} else {\n\t\t\t// Resolve book opened promise\n\t\t\tthis.loaded.displayOptions.then(() => {\n\t\t\t\tthis.opening.resolve(this);\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * Load Navigation and PageList from package\n\t * @private\n\t * @param {Packaging} packaging\n\t */\n\tloadNavigation(packaging) {\n\t\tlet navPath = packaging.navPath || packaging.ncxPath;\n\t\tlet toc = packaging.toc;\n\n\t\t// From json manifest\n\t\tif (toc) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.navigation = new Navigation(toc);\n\n\t\t\t\tif (packaging.pageList) {\n\t\t\t\t\tthis.pageList = new PageList(packaging.pageList); // TODO: handle page lists from Manifest\n\t\t\t\t}\n\n\t\t\t\tresolve(this.navigation);\n\t\t\t});\n\t\t}\n\n\t\tif (!navPath) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.navigation = new Navigation();\n\t\t\t\tthis.pageList = new PageList();\n\n\t\t\t\tresolve(this.navigation);\n\t\t\t});\n\t\t}\n\n\t\treturn this.load(navPath, \"xml\")\n\t\t\t.then((xml) => {\n\t\t\t\tthis.navigation = new Navigation(xml);\n\t\t\t\tthis.pageList = new PageList(xml);\n\t\t\t\treturn this.navigation;\n\t\t\t});\n\t}\n\n\t/**\n\t * Gets a Section of the Book from the Spine\n\t * Alias for `book.spine.get`\n\t * @param {string} target\n\t * @return {Section}\n\t */\n\tsection(target) {\n\t\treturn this.spine.get(target);\n\t}\n\n\t/**\n\t * Sugar to render a book to an element\n\t * @param  {element | string} element element or string to add a rendition to\n\t * @param  {object} [options]\n\t * @return {Rendition}\n\t */\n\trenderTo(element, options) {\n\t\tthis.rendition = new Rendition(this, options);\n\t\tthis.rendition.attachTo(element);\n\n\t\treturn this.rendition;\n\t}\n\n\t/**\n\t * Set if request should use withCredentials\n\t * @param {boolean} credentials\n\t */\n\tsetRequestCredentials(credentials) {\n\t\tthis.settings.requestCredentials = credentials;\n\t}\n\n\t/**\n\t * Set headers request should use\n\t * @param {object} headers\n\t */\n\tsetRequestHeaders(headers) {\n\t\tthis.settings.requestHeaders = headers;\n\t}\n\n\t/**\n\t * Unarchive a zipped epub\n\t * @private\n\t * @param  {binary} input epub data\n\t * @param  {string} [encoding]\n\t * @return {Archive}\n\t */\n\tunarchive(input, encoding) {\n\t\tthis.archive = new Archive();\n\t\treturn this.archive.open(input, encoding);\n\t}\n\n\t/**\n\t * Store the epubs contents\n\t * @private\n\t * @param  {binary} input epub data\n\t * @param  {string} [encoding]\n\t * @return {Store}\n\t */\n\tstore(name) {\n\t\t// Use \"blobUrl\" or \"base64\" for replacements\n\t\tlet replacementsSetting = this.settings.replacements && this.settings.replacements !== \"none\";\n\t\t// Save original url\n\t\tlet originalUrl = this.url;\n\t\t// Save original request method\n\t\tlet requester = this.settings.requestMethod || request.bind(this);\n\t\t// Create new Store\n\t\tthis.storage = new Store(name, requester, this.resolve.bind(this));\n\t\t// Replace request method to go through store\n\t\tthis.request = this.storage.request.bind(this.storage);\n\n\t\tthis.opened.then(() => {\n\t\t\tif (this.archived) {\n\t\t\t\tthis.storage.requester = this.archive.request.bind(this.archive);\n\t\t\t}\n\t\t\t// Substitute hook\n\t\t\tlet substituteResources = (output, section) => {\n\t\t\t\tsection.output = this.resources.substitute(output, section.url);\n\t\t\t};\n\n\t\t\t// Set to use replacements\n\t\t\tthis.resources.settings.replacements = replacementsSetting || \"blobUrl\";\n\t\t\t// Create replacement urls\n\t\t\tthis.resources.replacements().\n\t\t\t\tthen(() => {\n\t\t\t\t\treturn this.resources.replaceCss();\n\t\t\t\t});\n\n\t\t\tthis.storage.on(\"offline\", () => {\n\t\t\t\t// Remove url to use relative resolving for hrefs\n\t\t\t\tthis.url = new Url(\"/\", \"\");\n\t\t\t\t// Add hook to replace resources in contents\n\t\t\t\tthis.spine.hooks.serialize.register(substituteResources);\n\t\t\t});\n\n\t\t\tthis.storage.on(\"online\", () => {\n\t\t\t\t// Restore original url\n\t\t\t\tthis.url = originalUrl;\n\t\t\t\t// Remove hook\n\t\t\t\tthis.spine.hooks.serialize.deregister(substituteResources);\n\t\t\t});\n\n\t\t});\n\n\t\treturn this.storage;\n\t}\n\n\t/**\n\t * Get the cover url\n\t * @return {Promise<?string>} coverUrl\n\t */\n\tcoverUrl() {\n\t\treturn this.loaded.cover.then(() => {\n\t\t\tif (!this.cover) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.archived) {\n\t\t\t\treturn this.archive.createUrl(this.cover);\n\t\t\t} else {\n\t\t\t\treturn this.cover;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Load replacement urls\n\t * @private\n\t * @return {Promise} completed loading urls\n\t */\n\treplacements() {\n\t\tthis.spine.hooks.serialize.register((output, section) => {\n\t\t\tsection.output = this.resources.substitute(output, section.url);\n\t\t});\n\n\t\treturn this.resources.replacements().\n\t\t\tthen(() => {\n\t\t\t\treturn this.resources.replaceCss();\n\t\t\t});\n\t}\n\n\t/**\n\t * Find a DOM Range for a given CFI Range\n\t * @param  {EpubCFI} cfiRange a epub cfi range\n\t * @return {Promise}\n\t */\n\tgetRange(cfiRange) {\n\t\tvar cfi = new EpubCFI(cfiRange);\n\t\tvar item = this.spine.get(cfi.spinePos);\n\t\tvar _request = this.load.bind(this);\n\t\tif (!item) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\treject(\"CFI could not be found\");\n\t\t\t});\n\t\t}\n\t\treturn item.load(_request).then(function (contents) {\n\t\t\tvar range = cfi.toRange(item.document);\n\t\t\treturn range;\n\t\t});\n\t}\n\n\t/**\n\t * Generates the Book Key using the identifier in the manifest or other string provided\n\t * @param  {string} [identifier] to use instead of metadata identifier\n\t * @return {string} key\n\t */\n\tkey(identifier) {\n\t\tvar ident = identifier || this.packaging.metadata.identifier || this.url.filename;\n\t\treturn `epubjs:${EPUBJS_VERSION}:${ident}`;\n\t}\n\n\t/**\n\t * Destroy the Book and all associated objects\n\t */\n\tdestroy() {\n\t\tthis.opened = undefined;\n\t\tthis.loading = undefined;\n\t\tthis.loaded = undefined;\n\t\tthis.ready = undefined;\n\n\t\tthis.isOpen = false;\n\t\tthis.isRendered = false;\n\n\t\tthis.spine && this.spine.destroy();\n\t\tthis.locations && this.locations.destroy();\n\t\tthis.pageList && this.pageList.destroy();\n\t\tthis.archive && this.archive.destroy();\n\t\tthis.resources && this.resources.destroy();\n\t\tthis.container && this.container.destroy();\n\t\tthis.packaging && this.packaging.destroy();\n\t\tthis.rendition && this.rendition.destroy();\n\t\tthis.displayOptions && this.displayOptions.destroy();\n\n\t\tthis.spine = undefined;\n\t\tthis.locations = undefined;\n\t\tthis.pageList = undefined;\n\t\tthis.archive = undefined;\n\t\tthis.resources = undefined;\n\t\tthis.container = undefined;\n\t\tthis.packaging = undefined;\n\t\tthis.rendition = undefined;\n\n\t\tthis.navigation = undefined;\n\t\tthis.url = undefined;\n\t\tthis.path = undefined;\n\t\tthis.archived = false;\n\t}\n\n}\n\n//-- Enable binding events to book\nEventEmitter(Book.prototype);\n\nexport default Book;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}