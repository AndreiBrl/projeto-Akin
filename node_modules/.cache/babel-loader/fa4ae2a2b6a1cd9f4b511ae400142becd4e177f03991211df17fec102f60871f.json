{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barbu\\\\Desktop\\\\projeto-Akin\\\\src\\\\components\\\\PdfViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport mammoth from 'mammoth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordFileReader = () => {\n  _s();\n  const [htmlContent, setHtmlContent] = useState('');\n  const handleFileChange = async event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = async e => {\n        const result = e.target.result;\n\n        // Converte o arquivo Word para HTML usando mammoth\n        const {\n          value\n        } = await mammoth.extractRawText({\n          arrayBuffer: result\n        });\n        setHtmlContent(value);\n      };\n      reader.readAsArrayBuffer(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: htmlContent\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(WordFileReader, \"DXH88LqRpwRBKw4+STwEQ01w59I=\");\n_c = WordFileReader;\nexport default WordFileReader;\nvar _c;\n$RefreshReg$(_c, \"WordFileReader\");","map":{"version":3,"names":["React","useState","mammoth","jsxDEV","_jsxDEV","WordFileReader","_s","htmlContent","setHtmlContent","handleFileChange","event","file","target","files","reader","FileReader","onload","e","result","value","extractRawText","arrayBuffer","readAsArrayBuffer","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/barbu/Desktop/projeto-Akin/src/components/PdfViewer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport mammoth from 'mammoth';\r\n\r\nconst WordFileReader = () => {\r\n  const [htmlContent, setHtmlContent] = useState('');\r\n\r\n  const handleFileChange = async (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = async (e) => {\r\n        const result = e.target.result;\r\n\r\n        // Converte o arquivo Word para HTML usando mammoth\r\n        const { value } = await mammoth.extractRawText({ arrayBuffer: result });\r\n        setHtmlContent(value);\r\n      };\r\n\r\n      reader.readAsArrayBuffer(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <div dangerouslySetInnerHTML={{ __html: htmlContent }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordFileReader;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMQ,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAElC,IAAIF,IAAI,EAAE;MACR,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAE/BD,MAAM,CAACE,MAAM,GAAG,MAAOC,CAAC,IAAK;QAC3B,MAAMC,MAAM,GAAGD,CAAC,CAACL,MAAM,CAACM,MAAM;;QAE9B;QACA,MAAM;UAAEC;QAAM,CAAC,GAAG,MAAMjB,OAAO,CAACkB,cAAc,CAAC;UAAEC,WAAW,EAAEH;QAAO,CAAC,CAAC;QACvEV,cAAc,CAACW,KAAK,CAAC;MACvB,CAAC;MAEDL,MAAM,CAACQ,iBAAiB,CAACX,IAAI,CAAC;IAChC;EACF,CAAC;EAED,oBACEP,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEhB;IAAiB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDzB,OAAA;MAAK0B,uBAAuB,EAAE;QAAEC,MAAM,EAAExB;MAAY;IAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACvB,EAAA,CA3BID,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AA6BpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}