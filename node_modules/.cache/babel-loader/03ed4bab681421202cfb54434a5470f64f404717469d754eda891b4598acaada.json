{"ast":null,"code":"import _classCallCheck from \"C:/Users/barbu/Desktop/projeto-Akin/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/barbu/Desktop/projeto-Akin/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport Url from \"./utils/url\";\n\n/**\n * Themes to apply to displayed content\n * @class\n * @param {Rendition} rendition\n */\nvar Themes = /*#__PURE__*/function () {\n  function Themes(rendition) {\n    _classCallCheck(this, Themes);\n    this.rendition = rendition;\n    this._themes = {\n      \"default\": {\n        \"rules\": {},\n        \"url\": \"\",\n        \"serialized\": \"\"\n      }\n    };\n    this._overrides = {};\n    this._current = \"default\";\n    this._injected = [];\n    this.rendition.hooks.content.register(this.inject.bind(this));\n    this.rendition.hooks.content.register(this.overrides.bind(this));\n  }\n\n  /**\n   * Add themes to be used by a rendition\n   * @param {object | Array<object> | string}\n   * @example themes.register(\"light\", \"http://example.com/light.css\")\n   * @example themes.register(\"light\", { \"body\": { \"color\": \"purple\"}})\n   * @example themes.register({ \"light\" : {...}, \"dark\" : {...}})\n   */\n  _createClass(Themes, [{\n    key: \"register\",\n    value: function register() {\n      if (arguments.length === 0) {\n        return;\n      }\n      if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n        return this.registerThemes(arguments[0]);\n      }\n      if (arguments.length === 1 && typeof arguments[0] === \"string\") {\n        return this.default(arguments[0]);\n      }\n      if (arguments.length === 2 && typeof arguments[1] === \"string\") {\n        return this.registerUrl(arguments[0], arguments[1]);\n      }\n      if (arguments.length === 2 && typeof arguments[1] === \"object\") {\n        return this.registerRules(arguments[0], arguments[1]);\n      }\n    }\n\n    /**\n     * Add a default theme to be used by a rendition\n     * @param {object | string} theme\n     * @example themes.register(\"http://example.com/default.css\")\n     * @example themes.register({ \"body\": { \"color\": \"purple\"}})\n     */\n  }, {\n    key: \"default\",\n    value: function _default(theme) {\n      if (!theme) {\n        return;\n      }\n      if (typeof theme === \"string\") {\n        return this.registerUrl(\"default\", theme);\n      }\n      if (typeof theme === \"object\") {\n        return this.registerRules(\"default\", theme);\n      }\n    }\n\n    /**\n     * Register themes object\n     * @param {object} themes\n     */\n  }, {\n    key: \"registerThemes\",\n    value: function registerThemes(themes) {\n      for (var theme in themes) {\n        if (themes.hasOwnProperty(theme)) {\n          if (typeof themes[theme] === \"string\") {\n            this.registerUrl(theme, themes[theme]);\n          } else {\n            this.registerRules(theme, themes[theme]);\n          }\n        }\n      }\n    }\n\n    /**\n     * Register a theme by passing its css as string\n     * @param {string} name \n     * @param {string} css \n     */\n  }, {\n    key: \"registerCss\",\n    value: function registerCss(name, css) {\n      this._themes[name] = {\n        \"serialized\": css\n      };\n      if (this._injected[name] || name == 'default') {\n        this.update(name);\n      }\n    }\n\n    /**\n     * Register a url\n     * @param {string} name\n     * @param {string} input\n     */\n  }, {\n    key: \"registerUrl\",\n    value: function registerUrl(name, input) {\n      var url = new Url(input);\n      this._themes[name] = {\n        \"url\": url.toString()\n      };\n      if (this._injected[name] || name == 'default') {\n        this.update(name);\n      }\n    }\n\n    /**\n     * Register rule\n     * @param {string} name\n     * @param {object} rules\n     */\n  }, {\n    key: \"registerRules\",\n    value: function registerRules(name, rules) {\n      this._themes[name] = {\n        \"rules\": rules\n      };\n      // TODO: serialize css rules\n      if (this._injected[name] || name == 'default') {\n        this.update(name);\n      }\n    }\n\n    /**\n     * Select a theme\n     * @param {string} name\n     */\n  }, {\n    key: \"select\",\n    value: function select(name) {\n      var prev = this._current;\n      var contents;\n      this._current = name;\n      this.update(name);\n      contents = this.rendition.getContents();\n      contents.forEach(function (content) {\n        content.removeClass(prev);\n        content.addClass(name);\n      });\n    }\n\n    /**\n     * Update a theme\n     * @param {string} name\n     */\n  }, {\n    key: \"update\",\n    value: function update(name) {\n      var _this = this;\n      var contents = this.rendition.getContents();\n      contents.forEach(function (content) {\n        _this.add(name, content);\n      });\n    }\n\n    /**\n     * Inject all themes into contents\n     * @param {Contents} contents\n     */\n  }, {\n    key: \"inject\",\n    value: function inject(contents) {\n      var links = [];\n      var themes = this._themes;\n      var theme;\n      for (var name in themes) {\n        if (themes.hasOwnProperty(name) && (name === this._current || name === \"default\")) {\n          theme = themes[name];\n          if (theme.rules && Object.keys(theme.rules).length > 0 || theme.url && links.indexOf(theme.url) === -1) {\n            this.add(name, contents);\n          }\n          this._injected.push(name);\n        }\n      }\n      if (this._current != \"default\") {\n        contents.addClass(this._current);\n      }\n    }\n\n    /**\n     * Add Theme to contents\n     * @param {string} name\n     * @param {Contents} contents\n     */\n  }, {\n    key: \"add\",\n    value: function add(name, contents) {\n      var theme = this._themes[name];\n      if (!theme || !contents) {\n        return;\n      }\n      if (theme.url) {\n        contents.addStylesheet(theme.url);\n      } else if (theme.serialized) {\n        contents.addStylesheetCss(theme.serialized, name);\n        theme.injected = true;\n      } else if (theme.rules) {\n        contents.addStylesheetRules(theme.rules, name);\n        theme.injected = true;\n      }\n    }\n\n    /**\n     * Add override\n     * @param {string} name\n     * @param {string} value\n     * @param {boolean} priority\n     */\n  }, {\n    key: \"override\",\n    value: function override(name, value, priority) {\n      var _this2 = this;\n      var contents = this.rendition.getContents();\n      this._overrides[name] = {\n        value: value,\n        priority: priority === true\n      };\n      contents.forEach(function (content) {\n        content.css(name, _this2._overrides[name].value, _this2._overrides[name].priority);\n      });\n    }\n  }, {\n    key: \"removeOverride\",\n    value: function removeOverride(name) {\n      var contents = this.rendition.getContents();\n      delete this._overrides[name];\n      contents.forEach(function (content) {\n        content.css(name);\n      });\n    }\n\n    /**\n     * Add all overrides\n     * @param {Content} content\n     */\n  }, {\n    key: \"overrides\",\n    value: function overrides(contents) {\n      var overrides = this._overrides;\n      for (var rule in overrides) {\n        if (overrides.hasOwnProperty(rule)) {\n          contents.css(rule, overrides[rule].value, overrides[rule].priority);\n        }\n      }\n    }\n\n    /**\n     * Adjust the font size of a rendition\n     * @param {number} size\n     */\n  }, {\n    key: \"fontSize\",\n    value: function fontSize(size) {\n      this.override(\"font-size\", size);\n    }\n\n    /**\n     * Adjust the font-family of a rendition\n     * @param {string} f\n     */\n  }, {\n    key: \"font\",\n    value: function font(f) {\n      this.override(\"font-family\", f, true);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.rendition = undefined;\n      this._themes = undefined;\n      this._overrides = undefined;\n      this._current = undefined;\n      this._injected = undefined;\n    }\n  }]);\n  return Themes;\n}();\nexport default Themes;","map":{"version":3,"names":["Url","Themes","rendition","_classCallCheck","_themes","_overrides","_current","_injected","hooks","content","register","inject","bind","overrides","_createClass","key","value","arguments","length","registerThemes","default","registerUrl","registerRules","_default","theme","themes","hasOwnProperty","registerCss","name","css","update","input","url","toString","rules","select","prev","contents","getContents","forEach","removeClass","addClass","_this","add","links","Object","keys","indexOf","push","addStylesheet","serialized","addStylesheetCss","injected","addStylesheetRules","override","priority","_this2","removeOverride","rule","fontSize","size","font","f","destroy","undefined"],"sources":["C:/Users/barbu/Desktop/projeto-Akin/node_modules/epubjs/src/themes.js"],"sourcesContent":["import Url from \"./utils/url\";\n\n/**\n * Themes to apply to displayed content\n * @class\n * @param {Rendition} rendition\n */\nclass Themes {\n\tconstructor(rendition) {\n\t\tthis.rendition = rendition;\n\t\tthis._themes = {\n\t\t\t\"default\" : {\n\t\t\t\t\"rules\" : {},\n\t\t\t\t\"url\" : \"\",\n\t\t\t\t\"serialized\" : \"\"\n\t\t\t}\n\t\t};\n\t\tthis._overrides = {};\n\t\tthis._current = \"default\";\n\t\tthis._injected = [];\n\t\tthis.rendition.hooks.content.register(this.inject.bind(this));\n\t\tthis.rendition.hooks.content.register(this.overrides.bind(this));\n\n\t}\n\n\t/**\n\t * Add themes to be used by a rendition\n\t * @param {object | Array<object> | string}\n\t * @example themes.register(\"light\", \"http://example.com/light.css\")\n\t * @example themes.register(\"light\", { \"body\": { \"color\": \"purple\"}})\n\t * @example themes.register({ \"light\" : {...}, \"dark\" : {...}})\n\t */\n\tregister () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (arguments.length === 1 && typeof(arguments[0]) === \"object\") {\n\t\t\treturn this.registerThemes(arguments[0]);\n\t\t}\n\t\tif (arguments.length === 1 && typeof(arguments[0]) === \"string\") {\n\t\t\treturn this.default(arguments[0]);\n\t\t}\n\t\tif (arguments.length === 2 && typeof(arguments[1]) === \"string\") {\n\t\t\treturn this.registerUrl(arguments[0], arguments[1]);\n\t\t}\n\t\tif (arguments.length === 2 && typeof(arguments[1]) === \"object\") {\n\t\t\treturn this.registerRules(arguments[0], arguments[1]);\n\t\t}\n\t}\n\n\t/**\n\t * Add a default theme to be used by a rendition\n\t * @param {object | string} theme\n\t * @example themes.register(\"http://example.com/default.css\")\n\t * @example themes.register({ \"body\": { \"color\": \"purple\"}})\n\t */\n\tdefault (theme) {\n\t\tif (!theme) {\n\t\t\treturn;\n\t\t}\n\t\tif (typeof(theme) === \"string\") {\n\t\t\treturn this.registerUrl(\"default\", theme);\n\t\t}\n\t\tif (typeof(theme) === \"object\") {\n\t\t\treturn this.registerRules(\"default\", theme);\n\t\t}\n\t}\n\n\t/**\n\t * Register themes object\n\t * @param {object} themes\n\t */\n\tregisterThemes (themes) {\n\t\tfor (var theme in themes) {\n\t\t\tif (themes.hasOwnProperty(theme)) {\n\t\t\t\tif (typeof(themes[theme]) === \"string\") {\n\t\t\t\t\tthis.registerUrl(theme, themes[theme]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.registerRules(theme, themes[theme]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Register a theme by passing its css as string\n\t * @param {string} name \n\t * @param {string} css \n\t */\n\tregisterCss (name, css) {\n\t\tthis._themes[name] = { \"serialized\" : css };\n\t\tif (this._injected[name] || name == 'default') {\n\t\t\tthis.update(name);\n\t\t}\n\t}\n\n\t/**\n\t * Register a url\n\t * @param {string} name\n\t * @param {string} input\n\t */\n\tregisterUrl (name, input) {\n\t\tvar url = new Url(input);\n\t\tthis._themes[name] = { \"url\": url.toString() };\n\t\tif (this._injected[name] || name == 'default') {\n\t\t\tthis.update(name);\n\t\t}\n\t}\n\n\t/**\n\t * Register rule\n\t * @param {string} name\n\t * @param {object} rules\n\t */\n\tregisterRules (name, rules) {\n\t\tthis._themes[name] = { \"rules\": rules };\n\t\t// TODO: serialize css rules\n\t\tif (this._injected[name] || name == 'default') {\n\t\t\tthis.update(name);\n\t\t}\n\t}\n\n\t/**\n\t * Select a theme\n\t * @param {string} name\n\t */\n\tselect (name) {\n\t\tvar prev = this._current;\n\t\tvar contents;\n\n\t\tthis._current = name;\n\t\tthis.update(name);\n\n\t\tcontents = this.rendition.getContents();\n\t\tcontents.forEach( (content) => {\n\t\t\tcontent.removeClass(prev);\n\t\t\tcontent.addClass(name);\n\t\t});\n\t}\n\n\t/**\n\t * Update a theme\n\t * @param {string} name\n\t */\n\tupdate (name) {\n\t\tvar contents = this.rendition.getContents();\n\t\tcontents.forEach( (content) => {\n\t\t\tthis.add(name, content);\n\t\t});\n\t}\n\n\t/**\n\t * Inject all themes into contents\n\t * @param {Contents} contents\n\t */\n\tinject (contents) {\n\t\tvar links = [];\n\t\tvar themes = this._themes;\n\t\tvar theme;\n\n\t\tfor (var name in themes) {\n\t\t\tif (themes.hasOwnProperty(name) && (name === this._current || name === \"default\")) {\n\t\t\t\ttheme = themes[name];\n\t\t\t\tif((theme.rules && Object.keys(theme.rules).length > 0) || (theme.url && links.indexOf(theme.url) === -1)) {\n\t\t\t\t\tthis.add(name, contents);\n\t\t\t\t}\n\t\t\t\tthis._injected.push(name);\n\t\t\t}\n\t\t}\n\n\t\tif(this._current != \"default\") {\n\t\t\tcontents.addClass(this._current);\n\t\t}\n\t}\n\n\t/**\n\t * Add Theme to contents\n\t * @param {string} name\n\t * @param {Contents} contents\n\t */\n\tadd (name, contents) {\n\t\tvar theme = this._themes[name];\n\n\t\tif (!theme || !contents) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (theme.url) {\n\t\t\tcontents.addStylesheet(theme.url);\n\t\t} else if (theme.serialized) {\n\t\t\tcontents.addStylesheetCss(theme.serialized, name);\n\t\t\ttheme.injected = true;\n\t\t} else if (theme.rules) {\n\t\t\tcontents.addStylesheetRules(theme.rules, name);\n\t\t\ttheme.injected = true;\n\t\t}\n\t}\n\n\t/**\n\t * Add override\n\t * @param {string} name\n\t * @param {string} value\n\t * @param {boolean} priority\n\t */\n\toverride (name, value, priority) {\n\t\tvar contents = this.rendition.getContents();\n\n\t\tthis._overrides[name] = {\n\t\t\tvalue: value,\n\t\t\tpriority: priority === true\n\t\t};\n\n\t\tcontents.forEach( (content) => {\n\t\t\tcontent.css(name, this._overrides[name].value, this._overrides[name].priority);\n\t\t});\n\t}\n\n\tremoveOverride (name) {\n\t\tvar contents = this.rendition.getContents();\n\n\t\tdelete this._overrides[name];\n\n\t\tcontents.forEach( (content) => {\n\t\t\tcontent.css(name);\n\t\t});\n\t}\n\n\t/**\n\t * Add all overrides\n\t * @param {Content} content\n\t */\n\toverrides (contents) {\n\t\tvar overrides = this._overrides;\n\n\t\tfor (var rule in overrides) {\n\t\t\tif (overrides.hasOwnProperty(rule)) {\n\t\t\t\tcontents.css(rule, overrides[rule].value, overrides[rule].priority);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Adjust the font size of a rendition\n\t * @param {number} size\n\t */\n\tfontSize (size) {\n\t\tthis.override(\"font-size\", size);\n\t}\n\n\t/**\n\t * Adjust the font-family of a rendition\n\t * @param {string} f\n\t */\n\tfont (f) {\n\t\tthis.override(\"font-family\", f, true);\n\t}\n\n\tdestroy() {\n\t\tthis.rendition = undefined;\n\t\tthis._themes = undefined;\n\t\tthis._overrides = undefined;\n\t\tthis._current = undefined;\n\t\tthis._injected = undefined;\n\t}\n\n}\n\nexport default Themes;\n"],"mappings":";;AAAA,OAAOA,GAAG,MAAM,aAAa;;AAE7B;AACA;AACA;AACA;AACA;AAJA,IAKMC,MAAM;EACX,SAAAA,OAAYC,SAAS,EAAE;IAAAC,eAAA,OAAAF,MAAA;IACtB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACE,OAAO,GAAG;MACd,SAAS,EAAG;QACX,OAAO,EAAG,CAAC,CAAC;QACZ,KAAK,EAAG,EAAE;QACV,YAAY,EAAG;MAChB;IACD,CAAC;IACD,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC;IACpB,IAAI,CAACC,QAAQ,GAAG,SAAS;IACzB,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACL,SAAS,CAACM,KAAK,CAACC,OAAO,CAACC,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7D,IAAI,CAACV,SAAS,CAACM,KAAK,CAACC,OAAO,CAACC,QAAQ,CAAC,IAAI,CAACG,SAAS,CAACD,IAAI,CAAC,IAAI,CAAC,CAAC;EAEjE;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EANCE,YAAA,CAAAb,MAAA;IAAAc,GAAA;IAAAC,KAAA,EAOA,SAAAN,SAAA,EAAY;MACX,IAAIO,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;QAC3B;MACD;MACA,IAAID,SAAS,CAACC,MAAM,KAAK,CAAC,IAAI,OAAOD,SAAS,CAAC,CAAC,CAAE,KAAK,QAAQ,EAAE;QAChE,OAAO,IAAI,CAACE,cAAc,CAACF,SAAS,CAAC,CAAC,CAAC,CAAC;MACzC;MACA,IAAIA,SAAS,CAACC,MAAM,KAAK,CAAC,IAAI,OAAOD,SAAS,CAAC,CAAC,CAAE,KAAK,QAAQ,EAAE;QAChE,OAAO,IAAI,CAACG,OAAO,CAACH,SAAS,CAAC,CAAC,CAAC,CAAC;MAClC;MACA,IAAIA,SAAS,CAACC,MAAM,KAAK,CAAC,IAAI,OAAOD,SAAS,CAAC,CAAC,CAAE,KAAK,QAAQ,EAAE;QAChE,OAAO,IAAI,CAACI,WAAW,CAACJ,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC;MACpD;MACA,IAAIA,SAAS,CAACC,MAAM,KAAK,CAAC,IAAI,OAAOD,SAAS,CAAC,CAAC,CAAE,KAAK,QAAQ,EAAE;QAChE,OAAO,IAAI,CAACK,aAAa,CAACL,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC;MACtD;IACD;;IAEA;AACD;AACA;AACA;AACA;AACA;EALC;IAAAF,GAAA;IAAAC,KAAA,EAMA,SAAAO,SAASC,KAAK,EAAE;MACf,IAAI,CAACA,KAAK,EAAE;QACX;MACD;MACA,IAAI,OAAOA,KAAM,KAAK,QAAQ,EAAE;QAC/B,OAAO,IAAI,CAACH,WAAW,CAAC,SAAS,EAAEG,KAAK,CAAC;MAC1C;MACA,IAAI,OAAOA,KAAM,KAAK,QAAQ,EAAE;QAC/B,OAAO,IAAI,CAACF,aAAa,CAAC,SAAS,EAAEE,KAAK,CAAC;MAC5C;IACD;;IAEA;AACD;AACA;AACA;EAHC;IAAAT,GAAA;IAAAC,KAAA,EAIA,SAAAG,eAAgBM,MAAM,EAAE;MACvB,KAAK,IAAID,KAAK,IAAIC,MAAM,EAAE;QACzB,IAAIA,MAAM,CAACC,cAAc,CAACF,KAAK,CAAC,EAAE;UACjC,IAAI,OAAOC,MAAM,CAACD,KAAK,CAAE,KAAK,QAAQ,EAAE;YACvC,IAAI,CAACH,WAAW,CAACG,KAAK,EAAEC,MAAM,CAACD,KAAK,CAAC,CAAC;UACvC,CAAC,MAAM;YACN,IAAI,CAACF,aAAa,CAACE,KAAK,EAAEC,MAAM,CAACD,KAAK,CAAC,CAAC;UACzC;QACD;MACD;IACD;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAAT,GAAA;IAAAC,KAAA,EAKA,SAAAW,YAAaC,IAAI,EAAEC,GAAG,EAAE;MACvB,IAAI,CAACzB,OAAO,CAACwB,IAAI,CAAC,GAAG;QAAE,YAAY,EAAGC;MAAI,CAAC;MAC3C,IAAI,IAAI,CAACtB,SAAS,CAACqB,IAAI,CAAC,IAAIA,IAAI,IAAI,SAAS,EAAE;QAC9C,IAAI,CAACE,MAAM,CAACF,IAAI,CAAC;MAClB;IACD;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAAb,GAAA;IAAAC,KAAA,EAKA,SAAAK,YAAaO,IAAI,EAAEG,KAAK,EAAE;MACzB,IAAIC,GAAG,GAAG,IAAIhC,GAAG,CAAC+B,KAAK,CAAC;MACxB,IAAI,CAAC3B,OAAO,CAACwB,IAAI,CAAC,GAAG;QAAE,KAAK,EAAEI,GAAG,CAACC,QAAQ,CAAC;MAAE,CAAC;MAC9C,IAAI,IAAI,CAAC1B,SAAS,CAACqB,IAAI,CAAC,IAAIA,IAAI,IAAI,SAAS,EAAE;QAC9C,IAAI,CAACE,MAAM,CAACF,IAAI,CAAC;MAClB;IACD;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAAb,GAAA;IAAAC,KAAA,EAKA,SAAAM,cAAeM,IAAI,EAAEM,KAAK,EAAE;MAC3B,IAAI,CAAC9B,OAAO,CAACwB,IAAI,CAAC,GAAG;QAAE,OAAO,EAAEM;MAAM,CAAC;MACvC;MACA,IAAI,IAAI,CAAC3B,SAAS,CAACqB,IAAI,CAAC,IAAIA,IAAI,IAAI,SAAS,EAAE;QAC9C,IAAI,CAACE,MAAM,CAACF,IAAI,CAAC;MAClB;IACD;;IAEA;AACD;AACA;AACA;EAHC;IAAAb,GAAA;IAAAC,KAAA,EAIA,SAAAmB,OAAQP,IAAI,EAAE;MACb,IAAIQ,IAAI,GAAG,IAAI,CAAC9B,QAAQ;MACxB,IAAI+B,QAAQ;MAEZ,IAAI,CAAC/B,QAAQ,GAAGsB,IAAI;MACpB,IAAI,CAACE,MAAM,CAACF,IAAI,CAAC;MAEjBS,QAAQ,GAAG,IAAI,CAACnC,SAAS,CAACoC,WAAW,CAAC,CAAC;MACvCD,QAAQ,CAACE,OAAO,CAAE,UAAC9B,OAAO,EAAK;QAC9BA,OAAO,CAAC+B,WAAW,CAACJ,IAAI,CAAC;QACzB3B,OAAO,CAACgC,QAAQ,CAACb,IAAI,CAAC;MACvB,CAAC,CAAC;IACH;;IAEA;AACD;AACA;AACA;EAHC;IAAAb,GAAA;IAAAC,KAAA,EAIA,SAAAc,OAAQF,IAAI,EAAE;MAAA,IAAAc,KAAA;MACb,IAAIL,QAAQ,GAAG,IAAI,CAACnC,SAAS,CAACoC,WAAW,CAAC,CAAC;MAC3CD,QAAQ,CAACE,OAAO,CAAE,UAAC9B,OAAO,EAAK;QAC9BiC,KAAI,CAACC,GAAG,CAACf,IAAI,EAAEnB,OAAO,CAAC;MACxB,CAAC,CAAC;IACH;;IAEA;AACD;AACA;AACA;EAHC;IAAAM,GAAA;IAAAC,KAAA,EAIA,SAAAL,OAAQ0B,QAAQ,EAAE;MACjB,IAAIO,KAAK,GAAG,EAAE;MACd,IAAInB,MAAM,GAAG,IAAI,CAACrB,OAAO;MACzB,IAAIoB,KAAK;MAET,KAAK,IAAII,IAAI,IAAIH,MAAM,EAAE;QACxB,IAAIA,MAAM,CAACC,cAAc,CAACE,IAAI,CAAC,KAAKA,IAAI,KAAK,IAAI,CAACtB,QAAQ,IAAIsB,IAAI,KAAK,SAAS,CAAC,EAAE;UAClFJ,KAAK,GAAGC,MAAM,CAACG,IAAI,CAAC;UACpB,IAAIJ,KAAK,CAACU,KAAK,IAAIW,MAAM,CAACC,IAAI,CAACtB,KAAK,CAACU,KAAK,CAAC,CAAChB,MAAM,GAAG,CAAC,IAAMM,KAAK,CAACQ,GAAG,IAAIY,KAAK,CAACG,OAAO,CAACvB,KAAK,CAACQ,GAAG,CAAC,KAAK,CAAC,CAAE,EAAE;YAC1G,IAAI,CAACW,GAAG,CAACf,IAAI,EAAES,QAAQ,CAAC;UACzB;UACA,IAAI,CAAC9B,SAAS,CAACyC,IAAI,CAACpB,IAAI,CAAC;QAC1B;MACD;MAEA,IAAG,IAAI,CAACtB,QAAQ,IAAI,SAAS,EAAE;QAC9B+B,QAAQ,CAACI,QAAQ,CAAC,IAAI,CAACnC,QAAQ,CAAC;MACjC;IACD;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAAS,GAAA;IAAAC,KAAA,EAKA,SAAA2B,IAAKf,IAAI,EAAES,QAAQ,EAAE;MACpB,IAAIb,KAAK,GAAG,IAAI,CAACpB,OAAO,CAACwB,IAAI,CAAC;MAE9B,IAAI,CAACJ,KAAK,IAAI,CAACa,QAAQ,EAAE;QACxB;MACD;MAEA,IAAIb,KAAK,CAACQ,GAAG,EAAE;QACdK,QAAQ,CAACY,aAAa,CAACzB,KAAK,CAACQ,GAAG,CAAC;MAClC,CAAC,MAAM,IAAIR,KAAK,CAAC0B,UAAU,EAAE;QAC5Bb,QAAQ,CAACc,gBAAgB,CAAC3B,KAAK,CAAC0B,UAAU,EAAEtB,IAAI,CAAC;QACjDJ,KAAK,CAAC4B,QAAQ,GAAG,IAAI;MACtB,CAAC,MAAM,IAAI5B,KAAK,CAACU,KAAK,EAAE;QACvBG,QAAQ,CAACgB,kBAAkB,CAAC7B,KAAK,CAACU,KAAK,EAAEN,IAAI,CAAC;QAC9CJ,KAAK,CAAC4B,QAAQ,GAAG,IAAI;MACtB;IACD;;IAEA;AACD;AACA;AACA;AACA;AACA;EALC;IAAArC,GAAA;IAAAC,KAAA,EAMA,SAAAsC,SAAU1B,IAAI,EAAEZ,KAAK,EAAEuC,QAAQ,EAAE;MAAA,IAAAC,MAAA;MAChC,IAAInB,QAAQ,GAAG,IAAI,CAACnC,SAAS,CAACoC,WAAW,CAAC,CAAC;MAE3C,IAAI,CAACjC,UAAU,CAACuB,IAAI,CAAC,GAAG;QACvBZ,KAAK,EAAEA,KAAK;QACZuC,QAAQ,EAAEA,QAAQ,KAAK;MACxB,CAAC;MAEDlB,QAAQ,CAACE,OAAO,CAAE,UAAC9B,OAAO,EAAK;QAC9BA,OAAO,CAACoB,GAAG,CAACD,IAAI,EAAE4B,MAAI,CAACnD,UAAU,CAACuB,IAAI,CAAC,CAACZ,KAAK,EAAEwC,MAAI,CAACnD,UAAU,CAACuB,IAAI,CAAC,CAAC2B,QAAQ,CAAC;MAC/E,CAAC,CAAC;IACH;EAAC;IAAAxC,GAAA;IAAAC,KAAA,EAED,SAAAyC,eAAgB7B,IAAI,EAAE;MACrB,IAAIS,QAAQ,GAAG,IAAI,CAACnC,SAAS,CAACoC,WAAW,CAAC,CAAC;MAE3C,OAAO,IAAI,CAACjC,UAAU,CAACuB,IAAI,CAAC;MAE5BS,QAAQ,CAACE,OAAO,CAAE,UAAC9B,OAAO,EAAK;QAC9BA,OAAO,CAACoB,GAAG,CAACD,IAAI,CAAC;MAClB,CAAC,CAAC;IACH;;IAEA;AACD;AACA;AACA;EAHC;IAAAb,GAAA;IAAAC,KAAA,EAIA,SAAAH,UAAWwB,QAAQ,EAAE;MACpB,IAAIxB,SAAS,GAAG,IAAI,CAACR,UAAU;MAE/B,KAAK,IAAIqD,IAAI,IAAI7C,SAAS,EAAE;QAC3B,IAAIA,SAAS,CAACa,cAAc,CAACgC,IAAI,CAAC,EAAE;UACnCrB,QAAQ,CAACR,GAAG,CAAC6B,IAAI,EAAE7C,SAAS,CAAC6C,IAAI,CAAC,CAAC1C,KAAK,EAAEH,SAAS,CAAC6C,IAAI,CAAC,CAACH,QAAQ,CAAC;QACpE;MACD;IACD;;IAEA;AACD;AACA;AACA;EAHC;IAAAxC,GAAA;IAAAC,KAAA,EAIA,SAAA2C,SAAUC,IAAI,EAAE;MACf,IAAI,CAACN,QAAQ,CAAC,WAAW,EAAEM,IAAI,CAAC;IACjC;;IAEA;AACD;AACA;AACA;EAHC;IAAA7C,GAAA;IAAAC,KAAA,EAIA,SAAA6C,KAAMC,CAAC,EAAE;MACR,IAAI,CAACR,QAAQ,CAAC,aAAa,EAAEQ,CAAC,EAAE,IAAI,CAAC;IACtC;EAAC;IAAA/C,GAAA;IAAAC,KAAA,EAED,SAAA+C,QAAA,EAAU;MACT,IAAI,CAAC7D,SAAS,GAAG8D,SAAS;MAC1B,IAAI,CAAC5D,OAAO,GAAG4D,SAAS;MACxB,IAAI,CAAC3D,UAAU,GAAG2D,SAAS;MAC3B,IAAI,CAAC1D,QAAQ,GAAG0D,SAAS;MACzB,IAAI,CAACzD,SAAS,GAAGyD,SAAS;IAC3B;EAAC;EAAA,OAAA/D,MAAA;AAAA;AAIF,eAAeA,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}