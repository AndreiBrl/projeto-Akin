{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barbu\\\\Desktop\\\\projeto-Akin\\\\src\\\\components\\\\PdfViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport mammoth from 'mammoth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordFileReader = () => {\n  _s();\n  const [htmlContent, setHtmlContent] = useState('');\n  const handleLoadFile = async () => {\n    const filePath = '../book/ori//arquivo.docx'; // Substitua pelo caminho do seu arquivo Word\n\n    try {\n      const response = await fetch(filePath);\n      const arrayBuffer = await response.arrayBuffer();\n\n      // Converte o arquivo Word para HTML usando mammoth\n      const {\n        value\n      } = await mammoth.extractRawText({\n        arrayBuffer\n      });\n      setHtmlContent(value);\n    } catch (error) {\n      console.error('Erro ao carregar o arquivo:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLoadFile,\n      children: \"Carregar Arquivo Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: htmlContent\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(WordFileReader, \"DXH88LqRpwRBKw4+STwEQ01w59I=\");\n_c = WordFileReader;\nexport default WordFileReader;\nvar _c;\n$RefreshReg$(_c, \"WordFileReader\");","map":{"version":3,"names":["React","useState","mammoth","jsxDEV","_jsxDEV","WordFileReader","_s","htmlContent","setHtmlContent","handleLoadFile","filePath","response","fetch","arrayBuffer","value","extractRawText","error","console","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/barbu/Desktop/projeto-Akin/src/components/PdfViewer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport mammoth from 'mammoth';\r\n\r\nconst WordFileReader = () => {\r\n  const [htmlContent, setHtmlContent] = useState('');\r\n\r\n  const handleLoadFile = async () => {\r\n    const filePath = '../book/ori//arquivo.docx'; // Substitua pelo caminho do seu arquivo Word\r\n\r\n    try {\r\n      const response = await fetch(filePath);\r\n      const arrayBuffer = await response.arrayBuffer();\r\n\r\n      // Converte o arquivo Word para HTML usando mammoth\r\n      const { value } = await mammoth.extractRawText({ arrayBuffer });\r\n      setHtmlContent(value);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar o arquivo:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleLoadFile}>Carregar Arquivo Word</button>\r\n      <div dangerouslySetInnerHTML={{ __html: htmlContent }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordFileReader;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,QAAQ,GAAG,2BAA2B,CAAC,CAAC;;IAE9C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAQ,CAAC;MACtC,MAAMG,WAAW,GAAG,MAAMF,QAAQ,CAACE,WAAW,CAAC,CAAC;;MAEhD;MACA,MAAM;QAAEC;MAAM,CAAC,GAAG,MAAMZ,OAAO,CAACa,cAAc,CAAC;QAAEF;MAAY,CAAC,CAAC;MAC/DL,cAAc,CAACM,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAQe,OAAO,EAAEV,cAAe;MAAAS,QAAA,EAAC;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/DnB,OAAA;MAAKoB,uBAAuB,EAAE;QAAEC,MAAM,EAAElB;MAAY;IAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACjB,EAAA,CAxBID,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AA0BpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}