{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barbu\\\\Desktop\\\\projeto-Akin\\\\src\\\\components\\\\PdfViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport EPUB from 'epubjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EpubReader = () => {\n  _s();\n  const [htmlContent, setHtmlContent] = useState('');\n  const handleLoadFile = async () => {\n    const filePath = '../book/ori/alice.epub'; // Substitua pelo caminho do seu arquivo EPUB\n\n    try {\n      const book = await EPUB(filePath);\n      const content = await book.renderTo('string');\n      setHtmlContent(content);\n    } catch (error) {\n      console.error('Erro ao carregar o arquivo:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLoadFile,\n      children: \"Carregar Arquivo EPUB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: htmlContent\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(EpubReader, \"DXH88LqRpwRBKw4+STwEQ01w59I=\");\n_c = EpubReader;\nexport default EpubReader;\nvar _c;\n$RefreshReg$(_c, \"EpubReader\");","map":{"version":3,"names":["React","useState","EPUB","jsxDEV","_jsxDEV","EpubReader","_s","htmlContent","setHtmlContent","handleLoadFile","filePath","book","content","renderTo","error","console","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/barbu/Desktop/projeto-Akin/src/components/PdfViewer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport EPUB from 'epubjs';\r\n\r\nconst EpubReader = () => {\r\n  const [htmlContent, setHtmlContent] = useState('');\r\n\r\n  const handleLoadFile = async () => {\r\n    const filePath = '../book/ori/alice.epub'; // Substitua pelo caminho do seu arquivo EPUB\r\n\r\n    try {\r\n      const book = await EPUB(filePath);\r\n      const content = await book.renderTo('string');\r\n\r\n      setHtmlContent(content);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar o arquivo:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleLoadFile}>Carregar Arquivo EPUB</button>\r\n      <div dangerouslySetInnerHTML={{ __html: htmlContent }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EpubReader;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,QAAQ,GAAG,wBAAwB,CAAC,CAAC;;IAE3C,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMT,IAAI,CAACQ,QAAQ,CAAC;MACjC,MAAME,OAAO,GAAG,MAAMD,IAAI,CAACE,QAAQ,CAAC,QAAQ,CAAC;MAE7CL,cAAc,CAACI,OAAO,CAAC;IACzB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,oBACEV,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAQa,OAAO,EAAER,cAAe;MAAAO,QAAA,EAAC;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/DjB,OAAA;MAAKkB,uBAAuB,EAAE;QAAEC,MAAM,EAAEhB;MAAY;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACf,EAAA,CAtBID,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AAwBhB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}